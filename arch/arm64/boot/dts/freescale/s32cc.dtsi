// SPDX-License-Identifier: GPL-2.0-or-later OR MIT
/*
 * NXP S32CC SoC family
 *
 * Copyright (c) 2021 SUSE LLC
 * Copyright 2017-2021 NXP
 */

#include <dt-bindings/interrupt-controller/arm-gic.h>
#include <dt-bindings/clock/s32cc-scmi-clock.h>
#include <dt-bindings/nvmem/s32cc-siul2-nvmem.h>
#include <dt-bindings/memory/s32cc-siul2.h>

#define RTC_FIRC_CLKSEL		2
#define RTC_SIRC_CLKSEL		0

/ {
	interrupt-parent = <&gic>;
	#address-cells = <2>;
	#size-cells = <2>;

	aliases {
		serial0 = &uart0;
		serial1 = &uart1;
		serial2 = &uart2;

		clks = &clks;
	};

	cpus {
		#address-cells = <1>;
		#size-cells = <0>;

		cpu-map {
			cluster0 {
				core0 {
					cpu = <&cpu0>;
				};

				core1 {
					cpu = <&cpu1>;
				};
			};

			cluster1 {
				core0 {
					cpu = <&cpu2>;
				};

				core1 {
					cpu = <&cpu3>;
				};
			};
		};

		cpu0: cpu@0 {
			device_type = "cpu";
			compatible = "arm,cortex-a53";
			reg = <0x0>;
			enable-method = "psci";
			next-level-cache = <&cluster0_l2_cache>;
		};

		cpu1: cpu@1 {
			device_type = "cpu";
			compatible = "arm,cortex-a53";
			reg = <0x1>;
			enable-method = "psci";
			next-level-cache = <&cluster0_l2_cache>;
		};

		cpu2: cpu@100 {
			device_type = "cpu";
			compatible = "arm,cortex-a53";
			reg = <0x100>;
			enable-method = "psci";
			next-level-cache = <&cluster1_l2_cache>;
		};

		cpu3: cpu@101 {
			device_type = "cpu";
			compatible = "arm,cortex-a53";
			reg = <0x101>;
			enable-method = "psci";
			next-level-cache = <&cluster1_l2_cache>;
		};

		cluster0_l2_cache: l2-cache0 {
			compatible = "cache";
			status = "okay";
		};

		cluster1_l2_cache: l2-cache1 {
			compatible = "cache";
			status = "okay";
		};
	};

	pmu {
		compatible = "arm,armv8-pmuv3";
		interrupts = <GIC_PPI 7 IRQ_TYPE_LEVEL_HIGH>;
	};

	generic_timer: timer {
		compatible = "arm,armv8-timer";
		interrupts = <GIC_PPI 13 IRQ_TYPE_LEVEL_LOW>,
			     <GIC_PPI 14 IRQ_TYPE_LEVEL_LOW>,
			     <GIC_PPI 11 IRQ_TYPE_LEVEL_LOW>,
			     <GIC_PPI 10 IRQ_TYPE_LEVEL_LOW>;
	};

	reserved-memory  {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		scmi_shbuf: shm@d0000000 {
			compatible = "arm,scmi-shmem";
			reg = <0x0 0xd0000000 0x0 0x400000>;	/* 4 MB */
			no-map;
		};
	};

	firmware {
		scmi: scmi {
			compatible = "arm,scmi-smc";
			mbox-names = "tx";
			shmem = <&scmi_shbuf>;
			arm,smc-id = <0xc20000fe>;
			#address-cells = <1>;
			#size-cells = <0>;
			status = "okay";

			clks: protocol@14 {
				reg = <0x14>;
				#clock-cells = <1>;
			};

			reset: protocol@16 {
				reg = <0x16>;
				#reset-cells = <1>;
			};
		};

		psci {
			compatible = "arm,psci-1.0";
			method = "smc";
		};
	};

	soc {
		compatible = "simple-bus";
		#address-cells = <2>;
		#size-cells = <2>;
		ranges = <0x0 0x0 0x0 0x0 0x0 0x20000000>,
			 <0x0 0x22C00000 0x0 0x22C00000 0x0 0x4000>,
			 <0x0 0x40000000 0x0 0x40000000 0x0 0x14000000>,
			 <0x48 0x0 0x48 0x0 0x8 0x0>,
			 <0x58 0x0 0x58 0x0 0x8 0x0>;

		rtc0: rtc@40060000 {
			compatible = "nxp,s32cc-rtc";
			#interrupt-cells = <3>;
			reg = <0x0 0x40060000 0x0 0x1000>;
			interrupts = <GIC_SPI 121 IRQ_TYPE_LEVEL_HIGH>;	// RTC irq - GIC 153
			clocks = <&clks S32CC_SCMI_CLK_RTC_REG>,
				 <&clks S32CC_SCMI_CLK_RTC_SIRC>,
				 <&clks S32CC_SCMI_CLK_RTC_FIRC>;
			clock-names = "ipg", "sirc", "firc";
			/* Input clock selection: use the 51MHz FIRC with DIV512,
			 * for a roll-over time of just under 13 hours.
			 */
			nxp,clksel = <RTC_FIRC_CLKSEL>; // 2: FIRC; 0: SIRC
			nxp,dividers = <1 0>; // div512 enabled; div32 disabled
		};

		ddr_gpr: ddr_gpr@4007c600 {
			compatible = "nxp,s32cc-ddr-gpr", "syscon";
			reg = <0x0 0x4007c600 0x0 0x20>;
		};

		siul2@4009c000 {
			compatible = "simple-mfd";
			#address-cells = <2>;
			#size-cells = <2>;
			status = "okay";

			/* MIDR */
			ranges = <MIDR_SIUL2_0 0x0 0x0 0x4009c000 0x0 0x10>;

			nvram: nvram@4009c000 {
				compatible = "nxp,s32cc-siul2_0-nvmem";
				reg = <MIDR_SIUL2_0 0x0 0x0 0x10>;
				#address-cells = <1>;
				#size-cells = <1>;
				status = "okay";
				soc_revision: soc_revision@0 {
					reg = <SOC_REVISION_OFFSET NVRAM_CELL_SIZE>;
				};
				pcie_variant: pcie_variant@4 {
					reg = <PCIE_VARIANT_OFFSET NVRAM_CELL_SIZE>;
				};
			};
		};

		uart0: serial@401c8000 {
			compatible = "nxp,s32cc-linflexuart",
				     "fsl,s32v234-linflexuart";
			reg = <0x0 0x401c8000 0x0 0x3000>;
			interrupts = <GIC_SPI 82 IRQ_TYPE_EDGE_RISING>;
			clocks = <&clks S32CC_SCMI_CLK_LINFLEX_LIN>,
				 <&clks S32CC_SCMI_CLK_LINFLEX_XBAR>;
			clock-names = "lin", "ipg";
		};

		uart1: serial@401cc000 {
			compatible = "nxp,s32cc-linflexuart",
				     "fsl,s32v234-linflexuart";
			reg = <0x0 0x401cc000 0x0 0x3000>;
			interrupts = <GIC_SPI 83 IRQ_TYPE_EDGE_RISING>;
			clocks = <&clks S32CC_SCMI_CLK_LINFLEX_LIN>,
				 <&clks S32CC_SCMI_CLK_LINFLEX_XBAR>;
			clock-names = "lin", "ipg";
		};

		uart2: serial@402bc000 {
			compatible = "nxp,s32cc-linflexuart",
				     "fsl,s32v234-linflexuart";
			reg = <0x0 0x402bc000 0x0 0x3000>;
			interrupts = <GIC_SPI 84 IRQ_TYPE_EDGE_RISING>;
			clocks = <&clks S32CC_SCMI_CLK_LINFLEX_LIN>,
				 <&clks S32CC_SCMI_CLK_LINFLEX_XBAR>;
			clock-names = "lin", "ipg";
		};

		usdhc0: mmc@402f0000 {
			compatible = "nxp,s32cc-usdhc";
			reg = <0x0 0x402f0000 0x0 0x1000>;
			interrupts = <GIC_SPI 36 IRQ_TYPE_LEVEL_HIGH>;
			clocks = <&clks S32CC_SCMI_CLK_USDHC_MODULE>,
				 <&clks S32CC_SCMI_CLK_USDHC_AHB>,
				 <&clks S32CC_SCMI_CLK_USDHC_CORE>;
			clock-names = "ipg", "ahb", "per";
			bus-width = <8>;
			status = "disabled";
		};

		gic: interrupt-controller@50800000 {
			compatible = "arm,gic-v3";
			#interrupt-cells = <3>;
			#address-cells = <2>;
			#size-cells = <2>;
			interrupt-controller;
			reg = <0 0x50800000 0 0x10000>,
			      <0 0x50880000 0 0x80000>,
			      <0 0x50400000 0 0x2000>,
			      <0 0x50410000 0 0x2000>,
			      <0 0x50420000 0 0x2000>;
			interrupts = <GIC_PPI 9 IRQ_TYPE_LEVEL_HIGH>;

			msi-controller;
			/* GIC interrupts between 167 and 182 can be used as MBIs. */
			mbi-ranges = <167 16>;
		};
	};
};
