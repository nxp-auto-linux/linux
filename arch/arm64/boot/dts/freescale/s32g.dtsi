// SPDX-License-Identifier: GPL-2.0
/*
 * Copyright 2019-2022 NXP
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 */

#include "s32cc.dtsi"
#include "s32g-pfe.dtsi"
#include <dt-bindings/mailbox/nxp-llce-mb.h>
#include <dt-bindings/pinctrl/s32g-pinctrl.h>
#include <dt-bindings/clock/s32g-scmi-clock.h>
#include <dt-bindings/reset/s32g-scmi-reset.h>
#include <dt-bindings/net/s32g-pfe.h>

/ {
	virtio_block@39501000 {
		compatible = "virtio,mmio";
		reg = <0x0 0x39501000 0x0 0x1000>;
		interrupts = <0 68 4>;
	};

	reserved-memory {
		pfe_reserved_bmu2: pfebufs@34000000 {
			compatible = "nxp,s32g-pfe-bmu2-pool";
			/* BMU2: 512 KB */
			reg = <0 0x34000000 0 0x80000>;
			no-map;
			status = "okay";
		};

		pfe_reserved_rt: pfebufs@34080000 {
			compatible = "nxp,s32g-pfe-rt-pool";
			/* RT: 128 KB */
			reg = <0 0x34080000 0 0x20000>;
			no-map;
			status = "okay";
		};

		pfe_reserved: pfebufs@83200000 {
			compatible = "shared-dma-pool";
			/* 4 MB - 128 KB */
			reg = <0 0x83200000 0 0x3e0000>;
			no-map;
			status = "okay";
		};

		pfe_reserved_bdr: pfebufs@835e0000 {
			compatible = "nxp,s32g-pfe-bdr-pool";
			/* 128 KB */
			reg = <0 0x835e0000 0 0x20000>;
			status = "okay";
		};

		pfe_reserved_slave: pfebufs@83600000 {
			compatible = "shared-dma-pool";
			/* 2 MB - 128 KB */
			reg = <0 0x83600000 0 0x1e0000>;
			no-map;
			status = "disabled";
		};

		pfe_reserved_bdr_slave: pfebufs@837e0000 {
			compatible = "nxp,s32g-pfe-bdr-pool";
			/* 128 KB */
			reg = <0 0x837e0000 0 0x20000>;
			status = "disabled";
		};
		/* ends 0x83800000 */
	};

	siul2_0 {
		compatible = "simple-mfd";
		#address-cells = <2>;
		#size-cells = <2>;
		status = "okay";
		pinctrl0: siul2-pinctrl0@4009C000 {
			compatible = "nxp,s32g-siul2_0-pinctrl";
			#pinctrl-cells = <2>;
			reg = <0x1 0x0 0x0 0x198>,
			<0x2 0x0 0x0 0x150>;
			/* MSCR range */
			pins = <&pinctrl0 0 101>,
			/* IMCR range */
			<&pinctrl0 512 595>;
			status = "okay";
		};
		gpio0: siul2-gpio0 {
			compatible = "nxp,s32g-siul2-gpio";
			gpio-controller;
			#gpio-cells = <2>;
				/* GPIO 0-101 */
			gpio-ranges = <&pinctrl0 0 0 102>;
				/* Pad Data I/0 Registers */
			eirq-ranges =
				/* EIRQ[0] - EIRQ[10] */
				<&pinctrl0 0 19 11>,
				/* EIRQ[11] */
				<&pinctrl0 0 S32GEN1_INVALID_GPIO 1>,
				/* EIRQ[12] */
				<&pinctrl0 0 31 1>,
				/* EIRQ[13] - EIRQ[15] */
				<&pinctrl0 0 33 3>,
				/* EIRQ[16] - EIRQ[26] */
				<&pinctrl0 0 S32GEN1_INVALID_GPIO 11>,
				/* EIRQ[27] - EIRQ[31] */
				<&pinctrl0 0 36 5>;
				/* Pad Data I/0 Registers */
			reg = <0x3 0x0 0x0 0x10>,
			      <0x4 0x0 0x0 0x10>,
			      <0x5 0x0 0x0 0x34>;
			reg-names = "opads", "ipads", "eirqs";
			interrupt-controller;
			#interrupt-cells = <2>;
			interrupts = <0 210 4>;
			status = "okay";
		};
	};

	siul2_1 {
		compatible = "simple-mfd";
		#address-cells = <2>;
		#size-cells = <2>;
		status = "okay";

			 /* MIDR */
		ranges = <0 0 0x0 0x44010000 0x0 0x10>,
			 /* MSCR 112-190 */
			 <1 0 0x0 0x44010400 0x0 0x13C>,
			 /* IMCR range 631-1023 */
			 <2 0 0x0 0x44010C1C 0x0 0x5E4>,
			 /* Output pads */
			 <3 0 0x0 0x44011700 0x0 0x18>,
			 /* Input pads */
			 <4 0 0x0 0x44011740 0x0 0x18>,
			 /* EIRQS */
			 <5 0 0x0 0x44010010 0x0 0x34>;

		pinctrl1: siul2-pinctrl1@44010000 {
			compatible = "nxp,s32g-siul2_1-pinctrl";
			#pinctrl-cells = <2>;
			reg = <0x1 0x0 0x0 0x13C>,
			<0x2 0x0 0x0 0x5E4>;
			/* MSCR range */
			pins = <&pinctrl1 112 190>,
			/* IMCR range */
			<&pinctrl1 631 1023>;
			status = "okay";
		};
		/*
		 * Note gpio controller nodes are split into sections
		 * of contiguous GPIO numbering at this
		 * point in time, functions working with gpio chips
		 * assume this for many things.
		 */
		gpio1: siul2-gpio1 {
			compatible = "nxp,s32g-siul2-gpio";
			gpio-controller;
			#gpio-cells = <2>;
				/* GPIO 112-190 */
			gpio-ranges = <&pinctrl1 0 112 79>;
			eirq-ranges =
				/* EIRQ[0] - EIRQ[1] */
				<&pinctrl1 0 151 2>,
				/* EIRQ[2] - EIRQ[7] */
				<&pinctrl1 0 177 6>,
				/* EIRQ[8] */
				<&pinctrl1 0 154 1>,
				/* EIRQ[9] */
				<&pinctrl1 0 160 1>,
				/* EIRQ[10] */
				<&pinctrl1 0 165 1>,
				/* EIRQ[11] */
				<&pinctrl1 0 168 1>,
				/* EIRQ[12] - EIRQ[15] */
				<&pinctrl1 0 S32GEN1_INVALID_GPIO 4>,
				/* EIRQ[16] - EIRQ[22] */
				<&pinctrl1 0 184 7>,
				/* EIRQ[23] - EIRQ[25] */
				<&pinctrl1 0 113 3>,
				/* EIRQ[26] */
				<&pinctrl1 0 117 1>;
			/* Pad Data I/0 Registers */
			reg = <0x3 0x0 0x0 0x18>,
			    <0x04 0x0 0x0 0x18>,
			    <0x5 0x0 0x0 0x34>;
			reg-names = "opads", "ipads", "eirqs";
			interrupt-controller;
			interrupts = <0 210 4>;
			#interrupt-cells = <2>;
			status = "okay";
		};

		nvram1: nvram@44010000 {
			compatible = "nxp,s32cc-siul2_1-nvmem";
			reg = <0x0 0x0 0x0 0x10>;
			#address-cells = <1>;
			#size-cells = <1>;
			status = "okay";
			serdes_presence: serdes_presence@0 {
				reg = <SERDES_PRESENCE_OFFSET NVRAM_CELL_SIZE>;
			};
		};
	};

	usbmisc: usbmisc@44064200 {
		#index-cells = <1>;
		compatible = "fsl,s32g2-usbmisc";
		reg = <0x0 0x44064200 0x0 0x200>;
	};

	usbotg: usb@44064000 {
		compatible = "fsl,s32g-usb";
		reg = <0x0 0x44064000 0x0 0x200>;
		interrupt-parent = <&gic>;
		interrupts = <0 211 4>, /* OTG Core */
		             <0 212 4>; /* OTG Wakeup */
		clocks = <&clks S32G_SCMI_CLK_USB_MEM>,
			 <&clks S32G_SCMI_CLK_USB_LOW>;
		fsl,usbmisc = <&usbmisc 0>;
		ahb-burst-config = <0x3>;
		tx-burst-size-dword = <0x10>;
		rx-burst-size-dword = <0x10>;
		phy_type = "ulpi";
		dr_mode = "host";
		maximum-speed = "high-speed";
		status = "disabled";
	};

	llce_dte_sram: llce_dte_sram@43000000 {
		compatible = "mmio-sram";
		reg = <0x0 0x43000000 0x0 0x2000>;
	};

	llce_ppe_rx_sram: llce_ppe_rx_sram@43100000 {
		compatible = "mmio-sram";
		reg = <0x0 0x43100000 0x0 0x8000>;
	};

	llce_ppe_tx_sram: llce_ppe_tx_sram@43200000 {
		compatible = "mmio-sram";
		reg = <0x0 0x43200000 0x0 0x8000>;
	};

	llce_frpe_sram: llce_frpe_sram@43300000 {
		compatible = "mmio-sram";
		reg = <0x0 0x43300000 0x0 0x10000>;
	};

	llce_shmem: llce_shmem@43800000 {
		compatible = "mmio-sram";
		reg = <0x0 0x43800000 0x0 0x3c000>;
	};

	llce_boot_status: llce_boot_status@4383c000 {
		compatible = "mmio-sram";
		reg = <0x0 0x4383c000 0x0 0x14000>;
	};

	llce {
		compatible = "nxp,s32g-llce-core";

		/* RX-IN_FIFO */
		ranges = <0x0 0 0x0 0x43A00000 0x0 0x6000>,
			/* RX-OUT_FIFO */
			<0x1 0 0x0 0x43A08000 0x0 0x8000>,
			/* LLCE interrupt Concentrator */
			<0x2 0 0x0 0x43A14000 0x0 0x1000>,
			/* BLR-IN_FIFO */
			<0x3 0 0x0 0x43B00000 0x0 0x6000>,
			/* BLR-OUT_FIFO */
			<0x4 0 0x0 0x43B08000 0x0 0x6000>,
			/* Tx_Ack_FIFO */
			<0x5 0 0x0 0x43B10000 0x0 0x8000>,
			/* LLCE SEMA42*/
			<0x6 0 0x0 0x43C20000 0x0 0x44>;

		clocks = <&clks S32G_SCMI_CLK_LLCE_SYS>;
		clock-names = "llce_sys";
		firmware-name = "dte.bin", "ppe_rx.bin",
			"ppe_tx.bin", "frpe.bin";
		memory-region = <&llce_dte_sram>, <&llce_ppe_rx_sram>,
			<&llce_ppe_tx_sram>, <&llce_frpe_sram>,
			<&llce_shmem>, <&llce_boot_status>;
		memory-region-names = "dte.bin", "ppe_rx.bin",
			"ppe_tx.bin", "frpe.bin", "shmem", "status";
		/* LLCE system control registers */
		reg = <0x0 0x43FF8000 0x0 0x4000>;
		reg-names = "sysctrl";
		status = "okay";

		#address-cells = <2>;
		#size-cells = <2>;
		#interrupt-cells = <3>;

		llce_mb: llce_mb {
			compatible = "nxp,s32g-llce-mailbox";
			#mbox-cells = <2>;

			reg = <0x0 0x0 0x0 0x6000>,
				<0x1 0x0 0x0 0x8000>,
				<0x2 0x0 0x0 0x1000>,
				<0x3 0x0 0x0 0x6000>,
				<0x4 0x0 0x0 0x6000>,
				<0x5 0x0 0x0 0x8000>,
				<0x6 0x0 0x0 0x44>;
			reg-names = "rxin_fifo",
				"rxout_fifo",
				"icsr",
				"blrin_fifo",
				"blrout_fifo",
				"txack_fifo",
				"sema42";
			clocks = <&clks S32G_SCMI_CLK_LLCE_SYS>;
			clock-names = "llce_sys";
			memory-region = <&llce_shmem>, <&llce_boot_status>;
			memory-region-names = "shmem", "status";
			interrupts = <0 174 IRQ_TYPE_LEVEL_HIGH>,
				<0 175 IRQ_TYPE_LEVEL_HIGH>,
				<0 176 IRQ_TYPE_LEVEL_HIGH>,
				<0 177 IRQ_TYPE_LEVEL_HIGH>,
				<0 182 IRQ_TYPE_LEVEL_HIGH>,
				<0 183 IRQ_TYPE_LEVEL_HIGH>,
				<0 184 IRQ_TYPE_LEVEL_HIGH>;
			interrupt-names = "rxin_fifo_0_7",
				"rxin_fifo_8_15",
				"rxout_fifo_0_7",
				"rxout_fifo_8_15",
				"txack_fifo_0_7",
				"txack_fifo_8_15",
				"logger_rx";
			status = "okay";
		};

		llce_can_logger0: llce_can_logger0 {
			compatible = "nxp,s32g-llce-can-logger";
			mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 0>,
				<&llce_mb S32G_LLCE_CAN_LOGGER_MB 0>;
			mbox-names = "config", "rx";
			status = "okay";
		};

		llce_can_logger1: llce_can_logger1 {
			compatible = "nxp,s32g-llce-can-logger";
			mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 1>,
				<&llce_mb S32G_LLCE_CAN_LOGGER_MB 1>;
			mbox-names = "config", "rx";
			status = "okay";
		};

		llce_can_logger2: llce_can_logger2 {
			compatible = "nxp,s32g-llce-can-logger";
			mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 2>,
				<&llce_mb S32G_LLCE_CAN_LOGGER_MB 2>;
			mbox-names = "config", "rx";
			status = "okay";
		};

		llce_can_logger3: llce_can_logger3 {
			compatible = "nxp,s32g-llce-can-logger";
			mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 3>,
				<&llce_mb S32G_LLCE_CAN_LOGGER_MB 3>;
			mbox-names = "config", "rx";
			status = "okay";
		};

		llce_can_logger4: llce_can_logger4 {
			compatible = "nxp,s32g-llce-can-logger";
			mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 4>,
				<&llce_mb S32G_LLCE_CAN_LOGGER_MB 4>;
			mbox-names = "config", "rx";
			status = "okay";
		};

		llce_can_logger5: llce_can_logger5 {
			compatible = "nxp,s32g-llce-can-logger";
			mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 5>,
				<&llce_mb S32G_LLCE_CAN_LOGGER_MB 5>;
			mbox-names = "config", "rx";
			status = "okay";
		};

		llce_can_logger6: llce_can_logger6 {
			compatible = "nxp,s32g-llce-can-logger";
			mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 6>,
				<&llce_mb S32G_LLCE_CAN_LOGGER_MB 6>;
			mbox-names = "config", "rx";
			status = "okay";
		};

		llce_can_logger7: llce_can_logger7 {
			compatible = "nxp,s32g-llce-can-logger";
			mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 7>,
				<&llce_mb S32G_LLCE_CAN_LOGGER_MB 7>;
			mbox-names = "config", "rx";
			status = "okay";
		};

		llce_can_logger8: llce_can_logger8 {
			compatible = "nxp,s32g-llce-can-logger";
			mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 8>,
				<&llce_mb S32G_LLCE_CAN_LOGGER_MB 8>;
			mbox-names = "config", "rx";
			status = "okay";
		};

		llce_can_logger9: llce_can_logger9 {
			compatible = "nxp,s32g-llce-can-logger";
			mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 9>,
				<&llce_mb S32G_LLCE_CAN_LOGGER_MB 9>;
			mbox-names = "config", "rx";
			status = "okay";
		};

		llce_can_logger10: llce_can_logger10 {
			compatible = "nxp,s32g-llce-can-logger";
			mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 10>,
				<&llce_mb S32G_LLCE_CAN_LOGGER_MB 10>;
			mbox-names = "config", "rx";
			status = "okay";
		};

		llce_can_logger11: llce_can_logger11 {
			compatible = "nxp,s32g-llce-can-logger";
			mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 11>,
				<&llce_mb S32G_LLCE_CAN_LOGGER_MB 11>;
			mbox-names = "config", "rx";
			status = "okay";
		};

		llce_can_logger12: llce_can_logger12 {
			compatible = "nxp,s32g-llce-can-logger";
			mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 12>,
				<&llce_mb S32G_LLCE_CAN_LOGGER_MB 12>;
			mbox-names = "config", "rx";
			status = "okay";
		};

		llce_can_logger13: llce_can_logger13 {
			compatible = "nxp,s32g-llce-can-logger";
			mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 13>,
				<&llce_mb S32G_LLCE_CAN_LOGGER_MB 13>;
			mbox-names = "config", "rx";
			status = "okay";
		};

		llce_can_logger14: llce_can_logger14 {
			compatible = "nxp,s32g-llce-can-logger";
			mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 14>,
				<&llce_mb S32G_LLCE_CAN_LOGGER_MB 14>;
			mbox-names = "config", "rx";
			status = "okay";
		};

		llce_can_logger15: llce_can_logger15 {
			compatible = "nxp,s32g-llce-can-logger";
			mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 15>,
				<&llce_mb S32G_LLCE_CAN_LOGGER_MB 15>;
			mbox-names = "config", "rx";
			status = "okay";
		};

		llce_can0: llce_can0 {
			compatible = "nxp,s32g-llce-can";
			mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 0>,
				 <&llce_mb S32G_LLCE_CAN_RX_MB 0>,
				 <&llce_mb S32G_LLCE_CAN_TX_MB 0>;
			mbox-names = "config", "rx", "tx";
			clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
			clock-names = "can_pe";
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl0_llce_can0>,
				<&pinctrl1_llce_can0>;
			status = "disabled";
		};

		llce_can1: llce_can1 {
			compatible = "nxp,s32g-llce-can";
			mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 1>,
				 <&llce_mb S32G_LLCE_CAN_RX_MB 1>,
				 <&llce_mb S32G_LLCE_CAN_TX_MB 1>;
			mbox-names = "config", "rx", "tx";
			clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
			clock-names = "can_pe";
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl1_llce_can1>;
			status = "disabled";
		};

		llce_can2: llce_can2 {
			compatible = "nxp,s32g-llce-can";
			mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 2>,
				 <&llce_mb S32G_LLCE_CAN_RX_MB 2>,
				 <&llce_mb S32G_LLCE_CAN_TX_MB 2>;
			mbox-names = "config", "rx", "tx";
			clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
			clock-names = "can_pe";
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl1_llce_can2>;
			status = "disabled";
		};

		llce_can3: llce_can3 {
			compatible = "nxp,s32g-llce-can";
			mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 3>,
				 <&llce_mb S32G_LLCE_CAN_RX_MB 3>,
				 <&llce_mb S32G_LLCE_CAN_TX_MB 3>;
			mbox-names = "config", "rx", "tx";
			clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
			clock-names = "can_pe";
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl1_llce_can3>;
			status = "disabled";
		};

		llce_can4: llce_can4 {
			compatible = "nxp,s32g-llce-can";
			mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 4>,
				 <&llce_mb S32G_LLCE_CAN_RX_MB 4>,
				 <&llce_mb S32G_LLCE_CAN_TX_MB 4>;
			mbox-names = "config", "rx", "tx";
			clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
			clock-names = "can_pe";
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl1_llce_can4>;
			status = "disabled";
		};

		llce_can5: llce_can5 {
			compatible = "nxp,s32g-llce-can";
			mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 5>,
				 <&llce_mb S32G_LLCE_CAN_RX_MB 5>,
				 <&llce_mb S32G_LLCE_CAN_TX_MB 5>;
			mbox-names = "config", "rx", "tx";
			clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
			clock-names = "can_pe";
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl1_llce_can5>;
			status = "disabled";
		};

		llce_can6: llce_can6 {
			compatible = "nxp,s32g-llce-can";
			mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 6>,
				 <&llce_mb S32G_LLCE_CAN_RX_MB 6>,
				 <&llce_mb S32G_LLCE_CAN_TX_MB 6>;
			mbox-names = "config", "rx", "tx";
			clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
			clock-names = "can_pe";
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl1_llce_can6>;
			status = "disabled";
		};

		llce_can7: llce_can7 {
			compatible = "nxp,s32g-llce-can";
			mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 7>,
				 <&llce_mb S32G_LLCE_CAN_RX_MB 7>,
				 <&llce_mb S32G_LLCE_CAN_TX_MB 7>;
			mbox-names = "config", "rx", "tx";
			clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
			clock-names = "can_pe";
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl1_llce_can7>;
			status = "disabled";
		};

		llce_can8: llce_can8 {
			compatible = "nxp,s32g-llce-can";
			mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 8>,
				 <&llce_mb S32G_LLCE_CAN_RX_MB 8>,
				 <&llce_mb S32G_LLCE_CAN_TX_MB 8>;
			mbox-names = "config", "rx", "tx";
			clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
			clock-names = "can_pe";
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl1_llce_can8>;
			status = "disabled";
		};

		llce_can9: llce_can9 {
			compatible = "nxp,s32g-llce-can";
			mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 9>,
				 <&llce_mb S32G_LLCE_CAN_RX_MB 9>,
				 <&llce_mb S32G_LLCE_CAN_TX_MB 9>;
			mbox-names = "config", "rx", "tx";
			clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
			clock-names = "can_pe";
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl1_llce_can9>;
			status = "disabled";
		};

		llce_can10: llce_can10 {
			compatible = "nxp,s32g-llce-can";
			mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 10>,
				 <&llce_mb S32G_LLCE_CAN_RX_MB 10>,
				 <&llce_mb S32G_LLCE_CAN_TX_MB 10>;
			mbox-names = "config", "rx", "tx";
			clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
			clock-names = "can_pe";
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl1_llce_can10>;
			status = "disabled";
		};

		llce_can11: llce_can11 {
			compatible = "nxp,s32g-llce-can";
			mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 11>,
				 <&llce_mb S32G_LLCE_CAN_RX_MB 11>,
				 <&llce_mb S32G_LLCE_CAN_TX_MB 11>;
			mbox-names = "config", "rx", "tx";
			clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
			clock-names = "can_pe";
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl1_llce_can11>;
			status = "disabled";
		};

		llce_can12: llce_can12 {
			compatible = "nxp,s32g-llce-can";
			mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 12>,
				 <&llce_mb S32G_LLCE_CAN_RX_MB 12>,
				 <&llce_mb S32G_LLCE_CAN_TX_MB 12>;
			mbox-names = "config", "rx", "tx";
			clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
			clock-names = "can_pe";
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl1_llce_can12>;
			status = "disabled";
		};

		llce_can13: llce_can13 {
			compatible = "nxp,s32g-llce-can";
			mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 13>,
				 <&llce_mb S32G_LLCE_CAN_RX_MB 13>,
				 <&llce_mb S32G_LLCE_CAN_TX_MB 13>;
			mbox-names = "config", "rx", "tx";
			clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
			clock-names = "can_pe";
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl1_llce_can13>;
			status = "disabled";
		};

		llce_can14: llce_can14 {
			compatible = "nxp,s32g-llce-can";
			mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 14>,
				 <&llce_mb S32G_LLCE_CAN_RX_MB 14>,
				 <&llce_mb S32G_LLCE_CAN_TX_MB 14>;
			mbox-names = "config", "rx", "tx";
			clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
			clock-names = "can_pe";
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl1_llce_can14>;
			status = "disabled";
		};

		llce_can15: llce_can15 {
			compatible = "nxp,s32g-llce-can";
			mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 15>,
				 <&llce_mb S32G_LLCE_CAN_RX_MB 15>,
				 <&llce_mb S32G_LLCE_CAN_TX_MB 15>;
			mbox-names = "config", "rx", "tx";
			clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
			clock-names = "can_pe";
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl1_llce_can15>;
			status = "disabled";
		};
	};
};

&pinctrl0 {
	s32g274a {
		pinctrl0_llce_can0: llce_can0 {
			fsl,pins = <
				S32_GEN1_PAD_PC_11_LLCE_CAN0_RX_O
				S32_GEN1_PAD_PC_12_LLCE_CAN0_TX
			>;
		};

		pinctrl0_qspi: qspigrp {
				fsl,pins = <
					S32_GEN1_PAD_PF13__QSPI_A_DQS_OUT
					S32_GEN1_PAD_PF13__QSPI_A_DQS_IN
					S32_GEN1_PAD_PG4__QSPI_A_CS0
					S32_GEN1_PAD_PG5__QSPI_A_CS1
					S32_GEN1_PAD_PF5__QSPI_A_DATA0_IN
					S32_GEN1_PAD_PF5__QSPI_A_DATA0_OUT
					S32_GEN1_PAD_PF6__QSPI_A_DATA1_IN
					S32_GEN1_PAD_PF6__QSPI_A_DATA1_OUT
					S32_GEN1_PAD_PF7__QSPI_A_DATA2_IN
					S32_GEN1_PAD_PF7__QSPI_A_DATA2_OUT
					S32_GEN1_PAD_PF8__QSPI_A_DATA3_IN
					S32_GEN1_PAD_PF8__QSPI_A_DATA3_OUT
					S32_GEN1_PAD_PF9__QSPI_A_DATA4_IN
					S32_GEN1_PAD_PF9__QSPI_A_DATA4_OUT
					S32_GEN1_PAD_PF10__QSPI_A_DATA5_IN
					S32_GEN1_PAD_PF10__QSPI_A_DATA5_OUT
					S32_GEN1_PAD_PF11__QSPI_A_DATA6_IN
					S32_GEN1_PAD_PF11__QSPI_A_DATA6_OUT
					S32_GEN1_PAD_PF12__QSPI_A_DATA7_IN
					S32_GEN1_PAD_PF12__QSPI_A_DATA7_OUT
					S32_GEN1_PAD_PG0__QSPI_A_SCK
					S32_GEN1_PAD_PG1__QSPI_A_B_SCK
					S32_GEN1_PAD_PG2__QSPI_A_SCK2
					S32_GEN1_PAD_PG3__QSPI_A_B_SCK2
				>;
		};
	};
};

&pcie1 {
	interrupts =  <GIC_SPI 215 IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI 214 IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI 216 IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI 217 IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI 218 IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI 223 IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI 224 IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI 225 IRQ_TYPE_LEVEL_HIGH>;
	interrupt-names = "link_req_stat", "dma", "msi",
				"phy_link_down", "phy_link_up", "misc",
				"pcs", "tlp_req_no_comp";
	#interrupt-cells = <1>;
	interrupt-map-mask = <0 0 0 0x7>;
	interrupt-map = <0 0 0 1 &gic 0 0 0 219 4>,
				<0 0 0 2 &gic 0 0 0 220 4>,
				<0 0 0 3 &gic 0 0 0 221 4>,
				<0 0 0 4 &gic 0 0 0 222 4>;
	msi-parent = <&gic>;
};

&pinctrl1 {
	s32g274a {
		pinctrl1_llce_can0: llce_can0 {
			fsl,pins = <
				S32_GEN1_PAD_PC_11_LLCE_CAN0_RX_I
			>;
		};

		pinctrl1_llce_can1: llce_can1 {
			fsl,pins = <
				S32_GEN1_PAD_PJ_01_LLCE_CAN1_TX
				S32_GEN1_PAD_PJ_02_LLCE_CAN1_RX_I
				S32_GEN1_PAD_PJ_02_LLCE_CAN1_RX_O
			>;
		};

		pinctrl1_llce_can2: llce_can2 {
			fsl,pins = <
				S32_GEN1_PAD_PJ_04_LLCE_CAN2_RX_I
				S32_GEN1_PAD_PJ_04_LLCE_CAN2_RX_O
				S32_GEN1_PAD_PJ_03_LLCE_CAN2_TX
			>;
		};

		pinctrl1_llce_can3: llce_can3 {
			fsl,pins = <
				S32_GEN1_PAD_PJ_06_LLCE_CAN3_RX_I
				S32_GEN1_PAD_PJ_06_LLCE_CAN3_RX_O
				S32_GEN1_PAD_PJ_05_LLCE_CAN3_TX
			>;
		};

		pinctrl1_llce_can4: llce_can4 {
			fsl,pins = <
				S32_GEN1_PAD_PJ_08_LLCE_CAN4_RX_I
				S32_GEN1_PAD_PJ_08_LLCE_CAN4_RX_O
				S32_GEN1_PAD_PJ_07_LLCE_CAN4_TX
			>;
		};

		pinctrl1_llce_can5: llce_can5 {
			fsl,pins = <
				S32_GEN1_PAD_PJ_10_LLCE_CAN5_RX_I
				S32_GEN1_PAD_PJ_10_LLCE_CAN5_RX_O
				S32_GEN1_PAD_PJ_09_LLCE_CAN5_TX
			>;
		};

		pinctrl1_llce_can6: llce_can6 {
			fsl,pins = <
				S32_GEN1_PAD_PJ_12_LLCE_CAN6_RX_I
				S32_GEN1_PAD_PJ_12_LLCE_CAN6_RX_O
				S32_GEN1_PAD_PJ_11_LLCE_CAN6_TX
			>;
		};

		pinctrl1_llce_can7: llce_can7 {
			fsl,pins = <
				S32_GEN1_PAD_PJ_14_LLCE_CAN7_RX_I
				S32_GEN1_PAD_PJ_14_LLCE_CAN7_RX_O
				S32_GEN1_PAD_PJ_13_LLCE_CAN7_TX
			>;
		};

		pinctrl1_llce_can8: llce_can8 {
			fsl,pins = <
				S32_GEN1_PAD_PK_00_LLCE_CAN8_RX_I
				S32_GEN1_PAD_PK_00_LLCE_CAN8_RX_O
				S32_GEN1_PAD_PJ_15_LLCE_CAN8_TX
			>;
		};

		pinctrl1_llce_can9: llce_can9 {
			fsl,pins = <
				S32_GEN1_PAD_PK_02_LLCE_CAN9_RX_I
				S32_GEN1_PAD_PK_02_LLCE_CAN9_RX_O
				S32_GEN1_PAD_PK_01_LLCE_CAN9_TX
			>;
		};

		pinctrl1_llce_can10: llce_can10 {
			fsl,pins = <
				S32_GEN1_PAD_PK_04_LLCE_CAN10_RX_I
				S32_GEN1_PAD_PK_04_LLCE_CAN10_RX_O
				S32_GEN1_PAD_PK_03_LLCE_CAN10_TX
			>;
		};

		pinctrl1_llce_can11: llce_can11 {
			fsl,pins = <
				S32_GEN1_PAD_PK_06_LLCE_CAN11_RX_I
				S32_GEN1_PAD_PK_06_LLCE_CAN11_RX_O
				S32_GEN1_PAD_PK_05_LLCE_CAN11_TX
			>;
		};

		pinctrl1_llce_can12: llce_can12 {
			fsl,pins = <
				S32_GEN1_PAD_PK_08_LLCE_CAN12_RX_I
				S32_GEN1_PAD_PK_08_LLCE_CAN12_RX_O
				S32_GEN1_PAD_PK_07_LLCE_CAN12_TX
			>;
		};

		pinctrl1_llce_can13: llce_can13 {
			fsl,pins = <
				S32_GEN1_PAD_PK_10_LLCE_CAN13_RX_I
				S32_GEN1_PAD_PK_10_LLCE_CAN13_RX_O
				S32_GEN1_PAD_PK_09_LLCE_CAN13_TX
			>;
		};

		pinctrl1_llce_can14: llce_can14 {
			fsl,pins = <
				S32_GEN1_PAD_PK_12_LLCE_CAN14_RX_I
				S32_GEN1_PAD_PK_12_LLCE_CAN14_RX_O
				S32_GEN1_PAD_PK_11_LLCE_CAN14_TX
			>;
		};

		pinctrl1_llce_can15: llce_can15 {
			fsl,pins = <
				S32_GEN1_PAD_PK_14_LLCE_CAN15_RX_I
				S32_GEN1_PAD_PK_14_LLCE_CAN15_RX_O
				S32_GEN1_PAD_PK_13_LLCE_CAN15_TX
			>;
		};
	};
};

&qspi {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl0_qspi>;
};

&stm0 {
	status = "okay";
};

&stm1 {
	status = "okay";
};
