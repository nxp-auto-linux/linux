// SPDX-License-Identifier: GPL-2.0
/*
 * Copyright 2019-2022 NXP
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 */

#include "s32cc.dtsi"
#include "s32g-pfe.dtsi"
#include <dt-bindings/mailbox/nxp-llce-mb.h>
#include <dt-bindings/clock/s32g-scmi-clock.h>
#include <dt-bindings/reset/s32g-scmi-reset.h>
#include <dt-bindings/net/s32g-pfe.h>

/ {
	reserved-memory {
		pfe_reserved_bmu2: pfebufs@34000000 {
			compatible = "nxp,s32g-pfe-bmu2-pool";
			/* BMU2: 512 KB */
			reg = <0 0x34000000 0 0x80000>;
			no-map;
			status = "okay";
		};

		pfe_reserved_rt: pfebufs@34080000 {
			compatible = "nxp,s32g-pfe-rt-pool";
			/* RT: 128 KB */
			reg = <0 0x34080000 0 0x20000>;
			no-map;
			status = "okay";
		};

		pfe_reserved: pfebufs@83200000 {
			compatible = "shared-dma-pool";
			/* 4 MB - 128 KB */
			reg = <0 0x83200000 0 0x3e0000>;
			no-map;
			status = "okay";
		};

		pfe_reserved_bdr: pfebufs@835e0000 {
			compatible = "nxp,s32g-pfe-bdr-pool";
			/* 128 KB */
			reg = <0 0x835e0000 0 0x20000>;
			status = "okay";
		};
		/* ends 0x83600000 */
	};

	soc {
		siul2@4009c000 {
			compatible = "simple-mfd";
			status = "okay";
			#address-cells = <2>;
			#size-cells = <2>;

				 /* MIDR */
			ranges = <MIDR_SIUL2_0 0x0 0x0 0x4009c000 0x0 0x10>,
				 <MIDR_SIUL2_1 0x0 0x0 0x44010000 0x0 0x10>,

				 /* MSCR 0-101 */
				 <MSCRS_SIUL2_0 0x0 0x0 0x4009c240 0x0 0x198>,
				 /* MSCR 112-122 */
				 <MSCRS_SIUL2_1_0 0x0 0x0 0x44010400 0x0 0x2c>,
				 /* MSCR 144-190 */
				 <MSCRS_SIUL2_1_1 0x0 0x0 0x44010480 0x0 0xbc>,

				 /* IMCR range 512â€“595 */
				 <IMCRS_SIUL2_0 0x0 0x0 0x4009ca40 0x0 0x150>,
				 /* IMCR range 631 - 909 */
				 <IMCRS_SIUL2_1_0 0x0 0x0 0x44010c1c 0x0 0x45c>,
				 /* IMCR range 910 - 941 (EIRQs) */
				 <IMCRS_SIUL2_1_EIRQS 0x0 0x0 0x44011078 0x0 0x80>,
				 /* IMCR range 942 - 1007 */
				 <IMCRS_SIUL2_1_1 0x0 0x0 0x440110f8 0x0 0x108>,

				 /* Output pads */
				 <OPADS_SIUL2_0 0x0 0x0 0x4009d700 0x0 0x10>,
				 <OPADS_SIUL2_1 0x0 0x0 0x44011700 0x0 0x18>,

				 /* Input pads */
				 <IPADS_SIUL2_0 0x0 0x0 0x4009d740 0x0 0x10>,
				 <IPADS_SIUL2_1 0x0 0x0 0x44011740 0x0 0x18>,

				 /* EIRQs */
				 <EIRQS_SIUL2_1 0x0 0x0 0x44010010 0x0 0xb4>;

			pinctrl: siul2-pinctrl@4009c240 {
				compatible = "nxp,s32g-siul2-pinctrl";
				#pinctrl-cells = <2>;

				reg = <MSCRS_SIUL2_0    0 0x0 0x198>,
				      <MSCRS_SIUL2_1_0  0 0x0 0x2c>,
				      <MSCRS_SIUL2_1_1  0 0x0 0xbc>,
				      <IMCRS_SIUL2_0    0 0x0 0x150>,
				      <IMCRS_SIUL2_1_0  0 0x0 0x45c>,
				      <IMCRS_SIUL2_1_1  0 0x0 0x108>;

				/* MSCR range */
				nxp,pins = <0   101
					    112 122
					    144 190
				/* IMCR range */
					    512 595
					    631 909
					    942 1007>;
				status = "okay";
			};

			gpio: siul2-gpio@4009d700 {
				compatible = "nxp,s32g-siul2-gpio";

				reg = <OPADS_SIUL2_0        0    0x0 0x10>,
				      <OPADS_SIUL2_1        0    0x0 0x18>,
				      <IPADS_SIUL2_0        0    0x0 0x10>,
				      <IPADS_SIUL2_1        0    0x0 0x18>,
				      <EIRQS_SIUL2_1        0    0x0 0xb4>,
				      <IMCRS_SIUL2_1_EIRQS  0    0x0 0x80>;
				reg-names = "opads0", "opads1", "ipads0",
					    "ipads1", "eirqs", "eirq-imcrs";

				#gpio-cells = <2>;
				gpio-controller;
					/* GPIO 0-101 */
				gpio-ranges = <&pinctrl 0   0   102>,
					/* GPIO 112-190 */
					      <&pinctrl 112 112 79>;
				gpio-reserved-ranges = <102 10>,
						       <123 21>;

				interrupt-controller;
				#interrupt-cells = <2>;
				interrupts = <GIC_SPI 210 IRQ_TYPE_LEVEL_HIGH>;
				status = "okay";
			};

			nvram1: nvram@44010000 {
				compatible = "nxp,s32cc-siul2_1-nvmem";
				reg = <MIDR_SIUL2_1 0x0 0x0 0x10>;
				#address-cells = <1>;
				#size-cells = <1>;
				status = "okay";
				serdes_presence: serdes_presence@0 {
					reg = <SERDES_PRESENCE_OFFSET NVRAM_CELL_SIZE>;
				};
			};
		};

		llce_dte_sram: llce_dte_sram@43000000 {
			compatible = "mmio-sram";
			reg = <0x0 0x43000000 0x0 0x2000>;
		};

		llce_ppe_rx_sram: llce_ppe_rx_sram@43100000 {
			compatible = "mmio-sram";
			reg = <0x0 0x43100000 0x0 0x8000>;
		};

		llce_ppe_tx_sram: llce_ppe_tx_sram@43200000 {
			compatible = "mmio-sram";
			reg = <0x0 0x43200000 0x0 0x8000>;
		};

		llce_frpe_sram: llce_frpe_sram@43300000 {
			compatible = "mmio-sram";
			reg = <0x0 0x43300000 0x0 0x10000>;
		};

		llce_shmem: llce_shmem@43800000 {
			compatible = "mmio-sram";
			reg = <0x0 0x43800000 0x0 0x3c000>;
		};

		llce_boot_status: llce_boot_status@4383c000 {
			compatible = "mmio-sram";
			reg = <0x0 0x4383c000 0x0 0x14000>;
		};

		llce: llce@43a00000 {
			compatible = "nxp,s32g-llce-core";

			/* RX-IN_FIFO */
			ranges = <0x0 0 0x0 0x43a00000 0x0 0x6000>,
				/* RX-OUT_FIFO */
				<0x1 0 0x0 0x43a08000 0x0 0x8000>,
				/* LLCE interrupt Concentrator */
				<0x2 0 0x0 0x43a14000 0x0 0x1000>,
				/* BLR-IN_FIFO */
				<0x3 0 0x0 0x43b00000 0x0 0x6000>,
				/* BLR-OUT_FIFO */
				<0x4 0 0x0 0x43b08000 0x0 0x6000>,
				/* Tx_Ack_FIFO */
				<0x5 0 0x0 0x43b10000 0x0 0x8000>,
				/* LLCE SEMA42*/
				<0x6 0 0x0 0x43c20000 0x0 0x44>;

			clocks = <&clks S32G_SCMI_CLK_LLCE_SYS>;
			clock-names = "llce_sys";
			firmware-name = "dte.bin", "ppe_rx.bin",
				"ppe_tx.bin", "frpe.bin";
			memory-region = <&llce_dte_sram>, <&llce_ppe_rx_sram>,
				<&llce_ppe_tx_sram>, <&llce_frpe_sram>,
				<&llce_shmem>, <&llce_boot_status>;
			memory-region-names = "dte.bin", "ppe_rx.bin",
				"ppe_tx.bin", "frpe.bin", "shmem", "status";
			/* LLCE system control registers */
			reg = <0x0 0x43ff8000 0x0 0x4000>;
			reg-names = "sysctrl";
			status = "okay";

			#address-cells = <2>;
			#size-cells = <2>;
			#interrupt-cells = <3>;

			llce_mb: llce_mb@43a00000 {
				compatible = "nxp,s32g-llce-mailbox";
				#mbox-cells = <2>;

				reg = <0x0 0x0 0x0 0x6000>,
					<0x1 0x0 0x0 0x8000>,
					<0x2 0x0 0x0 0x1000>,
					<0x3 0x0 0x0 0x6000>,
					<0x4 0x0 0x0 0x6000>,
					<0x5 0x0 0x0 0x8000>,
					<0x6 0x0 0x0 0x44>;
				reg-names = "rxin_fifo",
					"rxout_fifo",
					"icsr",
					"blrin_fifo",
					"blrout_fifo",
					"txack_fifo",
					"sema42";
				clocks = <&clks S32G_SCMI_CLK_LLCE_SYS>;
				clock-names = "llce_sys";
				memory-region = <&llce_shmem>, <&llce_boot_status>;
				memory-region-names = "shmem", "status";
				interrupts = <GIC_SPI 174 IRQ_TYPE_LEVEL_HIGH>,
					<GIC_SPI 175 IRQ_TYPE_LEVEL_HIGH>,
					<GIC_SPI 176 IRQ_TYPE_LEVEL_HIGH>,
					<GIC_SPI 177 IRQ_TYPE_LEVEL_HIGH>,
					<GIC_SPI 182 IRQ_TYPE_LEVEL_HIGH>,
					<GIC_SPI 183 IRQ_TYPE_LEVEL_HIGH>,
					<GIC_SPI 184 IRQ_TYPE_LEVEL_HIGH>;
				interrupt-names = "rxin_fifo_0_7",
					"rxin_fifo_8_15",
					"rxout_fifo_0_7",
					"rxout_fifo_8_15",
					"txack_fifo_0_7",
					"txack_fifo_8_15",
					"logger_rx";
				status = "okay";
			};

			llce_can_logger0: llce_can_logger0 {
				compatible = "nxp,s32g-llce-can-logger";
				mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 0>,
					<&llce_mb S32G_LLCE_CAN_LOGGER_MB 0>;
				mbox-names = "config", "rx";
				status = "okay";
			};

			llce_can_logger1: llce_can_logger1 {
				compatible = "nxp,s32g-llce-can-logger";
				mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 1>,
					<&llce_mb S32G_LLCE_CAN_LOGGER_MB 1>;
				mbox-names = "config", "rx";
				status = "okay";
			};

			llce_can_logger2: llce_can_logger2 {
				compatible = "nxp,s32g-llce-can-logger";
				mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 2>,
					<&llce_mb S32G_LLCE_CAN_LOGGER_MB 2>;
				mbox-names = "config", "rx";
				status = "okay";
			};

			llce_can_logger3: llce_can_logger3 {
				compatible = "nxp,s32g-llce-can-logger";
				mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 3>,
					<&llce_mb S32G_LLCE_CAN_LOGGER_MB 3>;
				mbox-names = "config", "rx";
				status = "okay";
			};

			llce_can_logger4: llce_can_logger4 {
				compatible = "nxp,s32g-llce-can-logger";
				mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 4>,
					<&llce_mb S32G_LLCE_CAN_LOGGER_MB 4>;
				mbox-names = "config", "rx";
				status = "okay";
			};

			llce_can_logger5: llce_can_logger5 {
				compatible = "nxp,s32g-llce-can-logger";
				mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 5>,
					<&llce_mb S32G_LLCE_CAN_LOGGER_MB 5>;
				mbox-names = "config", "rx";
				status = "okay";
			};

			llce_can_logger6: llce_can_logger6 {
				compatible = "nxp,s32g-llce-can-logger";
				mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 6>,
					<&llce_mb S32G_LLCE_CAN_LOGGER_MB 6>;
				mbox-names = "config", "rx";
				status = "okay";
			};

			llce_can_logger7: llce_can_logger7 {
				compatible = "nxp,s32g-llce-can-logger";
				mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 7>,
					<&llce_mb S32G_LLCE_CAN_LOGGER_MB 7>;
				mbox-names = "config", "rx";
				status = "okay";
			};

			llce_can_logger8: llce_can_logger8 {
				compatible = "nxp,s32g-llce-can-logger";
				mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 8>,
					<&llce_mb S32G_LLCE_CAN_LOGGER_MB 8>;
				mbox-names = "config", "rx";
				status = "okay";
			};

			llce_can_logger9: llce_can_logger9 {
				compatible = "nxp,s32g-llce-can-logger";
				mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 9>,
					<&llce_mb S32G_LLCE_CAN_LOGGER_MB 9>;
				mbox-names = "config", "rx";
				status = "okay";
			};

			llce_can_logger10: llce_can_logger10 {
				compatible = "nxp,s32g-llce-can-logger";
				mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 10>,
					<&llce_mb S32G_LLCE_CAN_LOGGER_MB 10>;
				mbox-names = "config", "rx";
				status = "okay";
			};

			llce_can_logger11: llce_can_logger11 {
				compatible = "nxp,s32g-llce-can-logger";
				mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 11>,
					<&llce_mb S32G_LLCE_CAN_LOGGER_MB 11>;
				mbox-names = "config", "rx";
				status = "okay";
			};

			llce_can_logger12: llce_can_logger12 {
				compatible = "nxp,s32g-llce-can-logger";
				mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 12>,
					<&llce_mb S32G_LLCE_CAN_LOGGER_MB 12>;
				mbox-names = "config", "rx";
				status = "okay";
			};

			llce_can_logger13: llce_can_logger13 {
				compatible = "nxp,s32g-llce-can-logger";
				mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 13>,
					<&llce_mb S32G_LLCE_CAN_LOGGER_MB 13>;
				mbox-names = "config", "rx";
				status = "okay";
			};

			llce_can_logger14: llce_can_logger14 {
				compatible = "nxp,s32g-llce-can-logger";
				mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 14>,
					<&llce_mb S32G_LLCE_CAN_LOGGER_MB 14>;
				mbox-names = "config", "rx";
				status = "okay";
			};

			llce_can_logger15: llce_can_logger15 {
				compatible = "nxp,s32g-llce-can-logger";
				mboxes = <&llce_mb S32G_LLCE_CAN_LOGGER_CONFIG_MB 15>,
					<&llce_mb S32G_LLCE_CAN_LOGGER_MB 15>;
				mbox-names = "config", "rx";
				status = "okay";
			};

			llce_can0: llce_can0 {
				compatible = "nxp,s32g-llce-can";
				mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 0>,
					 <&llce_mb S32G_LLCE_CAN_RX_MB 0>,
					 <&llce_mb S32G_LLCE_CAN_TX_MB 0>;
				mbox-names = "config", "rx", "tx";
				clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
				clock-names = "can_pe";
				pinctrl-names = "default";
				pinctrl-0 = <&llce_can0_pins>;
				status = "disabled";
			};

			llce_can1: llce_can1 {
				compatible = "nxp,s32g-llce-can";
				mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 1>,
					 <&llce_mb S32G_LLCE_CAN_RX_MB 1>,
					 <&llce_mb S32G_LLCE_CAN_TX_MB 1>;
				mbox-names = "config", "rx", "tx";
				clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
				clock-names = "can_pe";
				pinctrl-names = "default";
				pinctrl-0 = <&llce_can1_pins>;
				status = "disabled";
			};

			llce_can2: llce_can2 {
				compatible = "nxp,s32g-llce-can";
				mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 2>,
					 <&llce_mb S32G_LLCE_CAN_RX_MB 2>,
					 <&llce_mb S32G_LLCE_CAN_TX_MB 2>;
				mbox-names = "config", "rx", "tx";
				clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
				clock-names = "can_pe";
				pinctrl-names = "default";
				pinctrl-0 = <&llce_can2_pins>;
				status = "disabled";
			};

			llce_can3: llce_can3 {
				compatible = "nxp,s32g-llce-can";
				mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 3>,
					 <&llce_mb S32G_LLCE_CAN_RX_MB 3>,
					 <&llce_mb S32G_LLCE_CAN_TX_MB 3>;
				mbox-names = "config", "rx", "tx";
				clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
				clock-names = "can_pe";
				pinctrl-names = "default";
				pinctrl-0 = <&llce_can3_pins>;
				status = "disabled";
			};

			llce_can4: llce_can4 {
				compatible = "nxp,s32g-llce-can";
				mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 4>,
					 <&llce_mb S32G_LLCE_CAN_RX_MB 4>,
					 <&llce_mb S32G_LLCE_CAN_TX_MB 4>;
				mbox-names = "config", "rx", "tx";
				clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
				clock-names = "can_pe";
				pinctrl-names = "default";
				pinctrl-0 = <&llce_can4_pins>;
				status = "disabled";
			};

			llce_can5: llce_can5 {
				compatible = "nxp,s32g-llce-can";
				mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 5>,
					 <&llce_mb S32G_LLCE_CAN_RX_MB 5>,
					 <&llce_mb S32G_LLCE_CAN_TX_MB 5>;
				mbox-names = "config", "rx", "tx";
				clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
				clock-names = "can_pe";
				pinctrl-names = "default";
				pinctrl-0 = <&llce_can5_pins>;
				status = "disabled";
			};

			llce_can6: llce_can6 {
				compatible = "nxp,s32g-llce-can";
				mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 6>,
					 <&llce_mb S32G_LLCE_CAN_RX_MB 6>,
					 <&llce_mb S32G_LLCE_CAN_TX_MB 6>;
				mbox-names = "config", "rx", "tx";
				clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
				clock-names = "can_pe";
				pinctrl-names = "default";
				pinctrl-0 = <&llce_can6_pins>;
				status = "disabled";
			};

			llce_can7: llce_can7 {
				compatible = "nxp,s32g-llce-can";
				mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 7>,
					 <&llce_mb S32G_LLCE_CAN_RX_MB 7>,
					 <&llce_mb S32G_LLCE_CAN_TX_MB 7>;
				mbox-names = "config", "rx", "tx";
				clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
				clock-names = "can_pe";
				pinctrl-names = "default";
				pinctrl-0 = <&llce_can7_pins>;
				status = "disabled";
			};

			llce_can8: llce_can8 {
				compatible = "nxp,s32g-llce-can";
				mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 8>,
					 <&llce_mb S32G_LLCE_CAN_RX_MB 8>,
					 <&llce_mb S32G_LLCE_CAN_TX_MB 8>;
				mbox-names = "config", "rx", "tx";
				clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
				clock-names = "can_pe";
				pinctrl-names = "default";
				pinctrl-0 = <&llce_can8_pins>;
				status = "disabled";
			};

			llce_can9: llce_can9 {
				compatible = "nxp,s32g-llce-can";
				mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 9>,
					 <&llce_mb S32G_LLCE_CAN_RX_MB 9>,
					 <&llce_mb S32G_LLCE_CAN_TX_MB 9>;
				mbox-names = "config", "rx", "tx";
				clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
				clock-names = "can_pe";
				pinctrl-names = "default";
				pinctrl-0 = <&llce_can9_pins>;
				status = "disabled";
			};

			llce_can10: llce_can10 {
				compatible = "nxp,s32g-llce-can";
				mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 10>,
					 <&llce_mb S32G_LLCE_CAN_RX_MB 10>,
					 <&llce_mb S32G_LLCE_CAN_TX_MB 10>;
				mbox-names = "config", "rx", "tx";
				clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
				clock-names = "can_pe";
				pinctrl-names = "default";
				pinctrl-0 = <&llce_can10_pins>;
				status = "disabled";
			};

			llce_can11: llce_can11 {
				compatible = "nxp,s32g-llce-can";
				mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 11>,
					 <&llce_mb S32G_LLCE_CAN_RX_MB 11>,
					 <&llce_mb S32G_LLCE_CAN_TX_MB 11>;
				mbox-names = "config", "rx", "tx";
				clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
				clock-names = "can_pe";
				pinctrl-names = "default";
				pinctrl-0 = <&llce_can11_pins>;
				status = "disabled";
			};

			llce_can12: llce_can12 {
				compatible = "nxp,s32g-llce-can";
				mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 12>,
					 <&llce_mb S32G_LLCE_CAN_RX_MB 12>,
					 <&llce_mb S32G_LLCE_CAN_TX_MB 12>;
				mbox-names = "config", "rx", "tx";
				clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
				clock-names = "can_pe";
				pinctrl-names = "default";
				pinctrl-0 = <&llce_can12_pins>;
				status = "disabled";
			};

			llce_can13: llce_can13 {
				compatible = "nxp,s32g-llce-can";
				mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 13>,
					 <&llce_mb S32G_LLCE_CAN_RX_MB 13>,
					 <&llce_mb S32G_LLCE_CAN_TX_MB 13>;
				mbox-names = "config", "rx", "tx";
				clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
				clock-names = "can_pe";
				pinctrl-names = "default";
				pinctrl-0 = <&llce_can13_pins>;
				status = "disabled";
			};

			llce_can14: llce_can14 {
				compatible = "nxp,s32g-llce-can";
				mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 14>,
					 <&llce_mb S32G_LLCE_CAN_RX_MB 14>,
					 <&llce_mb S32G_LLCE_CAN_TX_MB 14>;
				mbox-names = "config", "rx", "tx";
				clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
				clock-names = "can_pe";
				pinctrl-names = "default";
				pinctrl-0 = <&llce_can14_pins>;
				status = "disabled";
			};

			llce_can15: llce_can15 {
				compatible = "nxp,s32g-llce-can";
				mboxes = <&llce_mb S32G_LLCE_CAN_CONF_MB 15>,
					 <&llce_mb S32G_LLCE_CAN_RX_MB 15>,
					 <&llce_mb S32G_LLCE_CAN_TX_MB 15>;
				mbox-names = "config", "rx", "tx";
				clocks = <&clks S32G_SCMI_CLK_LLCE_CAN_PE>;
				clock-names = "can_pe";
				pinctrl-names = "default";
				pinctrl-0 = <&llce_can15_pins>;
				status = "disabled";
			};
		};

		usbmisc: usbmisc@44064200 {
			#index-cells = <1>;
			compatible = "fsl,s32g2-usbmisc";
			reg = <0x0 0x44064200 0x0 0x200>;
		};

		usbotg: usb@44064000 {
			compatible = "fsl,s32g-usb";
			reg = <0x0 0x44064000 0x0 0x200>;
			interrupt-parent = <&gic>;
			interrupts = <GIC_SPI 211 IRQ_TYPE_LEVEL_HIGH>, /* OTG Core */
				     <GIC_SPI 212 IRQ_TYPE_LEVEL_HIGH>; /* OTG Wakeup */
			clocks = <&clks S32G_SCMI_CLK_USB_MEM>,
				 <&clks S32G_SCMI_CLK_USB_LOW>;
			fsl,usbmisc = <&usbmisc 0>;
			ahb-burst-config = <0x3>;
			tx-burst-size-dword = <0x10>;
			rx-burst-size-dword = <0x10>;
			phy_type = "ulpi";
			dr_mode = "host";
			maximum-speed = "high-speed";
			status = "disabled";
		};
	};
};

&pinctrl {
	llce_can0_pins: llce_can0_pins {
		llce_can0_grp0 {
			pinmux = <S32CC_PINMUX(43, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		llce_can0_grp1 {
			pinmux = <S32CC_PINMUX(44, FUNC2)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		llce_can0_grp2 {
			pinmux = <S32CC_PINMUX(745, FUNC2)>;
		};

	};

	llce_can1_pins: llce_can1_pins {
		llce_can1_grp0 {
			pinmux = <S32CC_PINMUX(145, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		llce_can1_grp1 {
			pinmux = <S32CC_PINMUX(746, FUNC2)>;
		};

		llce_can1_grp2 {
			pinmux = <S32CC_PINMUX(146, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

	};

	llce_can2_pins: llce_can2_pins {
		llce_can2_grp0 {
			pinmux = <S32CC_PINMUX(747, FUNC2)>;
		};

		llce_can2_grp1 {
			pinmux = <S32CC_PINMUX(148, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		llce_can2_grp2 {
			pinmux = <S32CC_PINMUX(147, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

	};

	llce_can3_pins: llce_can3_pins {
		llce_can3_grp0 {
			pinmux = <S32CC_PINMUX(748, FUNC2)>;
		};

		llce_can3_grp1 {
			pinmux = <S32CC_PINMUX(150, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		llce_can3_grp2 {
			pinmux = <S32CC_PINMUX(149, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

	};

	llce_can4_pins: llce_can4_pins {
		llce_can4_grp0 {
			pinmux = <S32CC_PINMUX(749, FUNC2)>;
		};

		llce_can4_grp1 {
			pinmux = <S32CC_PINMUX(152, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		llce_can4_grp2 {
			pinmux = <S32CC_PINMUX(151, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

	};

	llce_can5_pins: llce_can5_pins {
		llce_can5_grp0 {
			pinmux = <S32CC_PINMUX(750, FUNC2)>;
		};

		llce_can5_grp1 {
			pinmux = <S32CC_PINMUX(154, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		llce_can5_grp2 {
			pinmux = <S32CC_PINMUX(153, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

	};

	llce_can6_pins: llce_can6_pins {
		llce_can6_grp0 {
			pinmux = <S32CC_PINMUX(751, FUNC2)>;
		};

		llce_can6_grp1 {
			pinmux = <S32CC_PINMUX(156, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		llce_can6_grp2 {
			pinmux = <S32CC_PINMUX(155, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

	};

	llce_can7_pins: llce_can7_pins {
		llce_can7_grp0 {
			pinmux = <S32CC_PINMUX(752, FUNC2)>;
		};

		llce_can7_grp1 {
			pinmux = <S32CC_PINMUX(158, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		llce_can7_grp2 {
			pinmux = <S32CC_PINMUX(157, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

	};

	llce_can8_pins: llce_can8_pins {
		llce_can8_grp0 {
			pinmux = <S32CC_PINMUX(753, FUNC2)>;
		};

		llce_can8_grp1 {
			pinmux = <S32CC_PINMUX(160, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		llce_can8_grp2 {
			pinmux = <S32CC_PINMUX(159, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

	};

	llce_can9_pins: llce_can9_pins {
		llce_can9_grp0 {
			pinmux = <S32CC_PINMUX(754, FUNC2)>;
		};

		llce_can9_grp1 {
			pinmux = <S32CC_PINMUX(162, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		llce_can9_grp2 {
			pinmux = <S32CC_PINMUX(161, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

	};

	llce_can10_pins: llce_can10_pins {
		llce_can10_grp0 {
			pinmux = <S32CC_PINMUX(755, FUNC2)>;
		};

		llce_can10_grp1 {
			pinmux = <S32CC_PINMUX(164, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		llce_can10_grp2 {
			pinmux = <S32CC_PINMUX(163, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

	};

	llce_can11_pins: llce_can11_pins {
		llce_can11_grp0 {
			pinmux = <S32CC_PINMUX(756, FUNC2)>;
		};

		llce_can11_grp1 {
			pinmux = <S32CC_PINMUX(166, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		llce_can11_grp2 {
			pinmux = <S32CC_PINMUX(165, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

	};

	llce_can12_pins: llce_can12_pins {
		llce_can12_grp0 {
			pinmux = <S32CC_PINMUX(757, FUNC2)>;
		};

		llce_can12_grp1 {
			pinmux = <S32CC_PINMUX(168, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		llce_can12_grp2 {
			pinmux = <S32CC_PINMUX(167, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

	};

	llce_can13_pins: llce_can13_pins {
		llce_can13_grp0 {
			pinmux = <S32CC_PINMUX(758, FUNC2)>;
		};

		llce_can13_grp1 {
			pinmux = <S32CC_PINMUX(170, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		llce_can13_grp2 {
			pinmux = <S32CC_PINMUX(169, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

	};

	llce_can14_pins: llce_can14_pins {
		llce_can14_grp0 {
			pinmux = <S32CC_PINMUX(759, FUNC2)>;
		};

		llce_can14_grp1 {
			pinmux = <S32CC_PINMUX(172, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		llce_can14_grp2 {
			pinmux = <S32CC_PINMUX(171, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

	};

	llce_can15_pins: llce_can15_pins {
		llce_can15_grp0 {
			pinmux = <S32CC_PINMUX(760, FUNC2)>;
		};

		llce_can15_grp1 {
			pinmux = <S32CC_PINMUX(174, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		llce_can15_grp2 {
			pinmux = <S32CC_PINMUX(173, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

	};

	qspi_pins: qspi_pins {
		qspi_grp0 {
			pinmux = <S32CC_PINMUX(93, FUNC1)>,
				 <S32CC_PINMUX(97, FUNC1)>,
				 <S32CC_PINMUX(98, FUNC1)>,
				 <S32CC_PINMUX(99, FUNC1)>;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
			bias-pull-down;
		};

		qspi_grp1 {
			pinmux = <S32CC_PINMUX(548, FUNC2)>,
				 <S32CC_PINMUX(540, FUNC2)>,
				 <S32CC_PINMUX(541, FUNC2)>,
				 <S32CC_PINMUX(542, FUNC2)>,
				 <S32CC_PINMUX(543, FUNC2)>,
				 <S32CC_PINMUX(544, FUNC2)>,
				 <S32CC_PINMUX(545, FUNC2)>,
				 <S32CC_PINMUX(546, FUNC2)>,
				 <S32CC_PINMUX(547, FUNC2)>;
		};

		qspi_grp2 {
			pinmux = <S32CC_PINMUX(100, FUNC1)>,
				 <S32CC_PINMUX(101, FUNC1)>,
				 <S32CC_PINMUX(96, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		qspi_grp3 {
			pinmux = <S32CC_PINMUX(85, FUNC1)>,
				 <S32CC_PINMUX(86, FUNC1)>,
				 <S32CC_PINMUX(87, FUNC1)>,
				 <S32CC_PINMUX(88, FUNC1)>,
				 <S32CC_PINMUX(89, FUNC1)>,
				 <S32CC_PINMUX(90, FUNC1)>,
				 <S32CC_PINMUX(91, FUNC1)>,
				 <S32CC_PINMUX(92, FUNC1)>;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

	};
};

&pcie1 {
	interrupts =  <GIC_SPI 215 IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI 214 IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI 216 IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI 217 IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI 218 IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI 223 IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI 224 IRQ_TYPE_LEVEL_HIGH>,
			<GIC_SPI 225 IRQ_TYPE_LEVEL_HIGH>;
	interrupt-names = "link_req_stat", "dma", "msi",
				"phy_link_down", "phy_link_up", "misc",
				"pcs", "tlp_req_no_comp";
	#interrupt-cells = <1>;
	interrupt-map-mask = <0 0 0 0x7>;
	interrupt-map = <0 0 0 1 &gic 0 0 0 219 4>,
				<0 0 0 2 &gic 0 0 0 220 4>,
				<0 0 0 3 &gic 0 0 0 221 4>,
				<0 0 0 4 &gic 0 0 0 222 4>;
	msi-parent = <&gic>;
};

&qspi {
	pinctrl-names = "default";
	pinctrl-0 = <&qspi_pins>;
};

&stm0 {
	status = "okay";
};

&stm1 {
	status = "okay";
};
