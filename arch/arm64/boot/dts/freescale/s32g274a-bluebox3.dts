// SPDX-License-Identifier: GPL-2.0-or-later
/*
 * Copyright 2020-2022 NXP
 */

/dts-v1/;
#include "s32g2.dtsi"
#include <dt-bindings/gpio/gpio.h>
/ {
	model = "NXP S32G274A BlueBox3";

	chosen {
		stdout-path = "serial0:115200n8";
	};
};

&edma0 {
	status = "okay";
};

&edma1 {
	status = "okay";
};

&fccu {
	status = "okay";
};

&generic_timer {
	clock-frequency = <5000000>;
};

&gmac0 {
	status = "disabled";
};

&i2c0 {
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&i2c0_pins>;
	pinctrl-1 = <&i2c0_gpio_pins>;
	scl-gpios = <&gpio 17 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	sda-gpios = <&gpio 16 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	status = "okay";
};

&i2c1 {
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&i2c1_pins>;
	pinctrl-1 = <&i2c1_gpio_pins>;
	scl-gpios = <&gpio 19 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	sda-gpios = <&gpio 20 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	status = "okay";
};

&i2c2 {
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&i2c2_pins>;
	pinctrl-1 = <&i2c2_gpio_pins>;
	scl-gpios = <&gpio 21 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	sda-gpios = <&gpio 22 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	status = "okay";
};

&i2c4 {
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&i2c4_pins>;
	pinctrl-1 = <&i2c4_gpio_pins>;
	scl-gpios = <&gpio 34 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	sda-gpios = <&gpio 33 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	status = "okay";
};

&llce_dte_sram {
	status = "okay";
};

&llce_ppe_rx_sram {
	status = "okay";
};

&llce_ppe_tx_sram {
	status = "okay";
};

&llce_frpe_sram {
	status = "okay";
};

&llce_shmem {
	status = "okay";
};

&llce_boot_status {
	status = "okay";
};

&llce_can0 {
	status = "okay";
};

&llce_can1 {
	status = "okay";
};

&llce_can2 {
	status = "okay";
};

&llce_can3 {
	status = "okay";
};

&llce_can4 {
	status = "okay";
};

&llce_can5 {
	status = "okay";
};

&llce_can6 {
	status = "okay";
};

&llce_can7 {
	status = "okay";
};

&llce_can8 {
	status = "okay";
};

&llce_can9 {
	status = "okay";
};

&llce_can10 {
	status = "okay";
};

&llce_can11 {
	status = "okay";
};

&llce_can12 {
	status = "okay";
};

&llce_can13 {
	status = "okay";
};

&llce_can14 {
	status = "okay";
};

&llce_can15 {
	status = "okay";
};

&pcie0 {
	status = "okay";
};

&pfe {
	status = "okay";
	memory-region = <&pfe_reserved>;
};

&pfe_netif0 {
	status = "okay";

	fixed-link {
		speed = <1000>;
		full-duplex;
	};
};

&pfe_mdio0 {
	pinctrl-names = "default";
	pinctrl-0 = <&pfe0mdio_pins>;
	status = "okay";

	phy5: phy@5 {
		reg = <5>;
	};

	phy6: phy@6 {
		reg = <6>;
	};

	phy25: phy@25 {
		reg = <25>;
	};

	phy26: phy@26 {
		reg = <26>;
	};

	phy27: phy@27 {
		reg = <27>;
	};

	phy28: phy@28 {
		reg = <28>;
	};

	phy29: phy@29 {
		reg = <29>;
	};

	phy30: phy@30 {
		reg = <30>;
	};
};

&pinctrl {
	status = "okay";
	dspi0_pins: dspi0_pins {
		dspi0_grp0 {
			pinmux = <S32CC_PINMUX(13, FUNC1)>,
				 <S32CC_PINMUX(15, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		dspi0_grp1 {
			pinmux = <S32CC_PINMUX(14, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
			bias-pull-up;
		};

		dspi0_grp2 {
			pinmux = <S32CC_PINMUX(982, FUNC2)>;
		};

		dspi0_grp3 {
			pinmux = <S32CC_PINMUX(25, FUNC5)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
			bias-pull-up;
		};

		dspi0_grp4 {
			pinmux = <S32CC_PINMUX(26, FUNC3)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
			bias-pull-up;
		};

	};

	dspi1_pins: dspi1_pins {
		dspi1_grp0 {
			pinmux = <S32CC_PINMUX(6, FUNC2)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		dspi1_grp1 {
			pinmux = <S32CC_PINMUX(8, FUNC3)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		dspi1_grp2 {
			pinmux = <S32CC_PINMUX(7, FUNC2)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
			bias-pull-up;
		};

		dspi1_grp3 {
			pinmux = <S32CC_PINMUX(68, FUNC3)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
			bias-pull-up;
		};

		dspi1_grp4 {
			pinmux = <S32CC_PINMUX(95, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
			bias-pull-up;
		};

		dspi1_grp5 {
			pinmux = <S32CC_PINMUX(987, FUNC2)>;
		};

	};

	i2c0_pins: i2c0_pins {
		i2c0_grp0 {
			pinmux = <S32CC_PINMUX(16, FUNC1)>,
				 <S32CC_PINMUX(17, FUNC1)>;
			drive-open-drain;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_83MHZ>;
		};

		i2c0_grp1 {
			pinmux = <S32CC_PINMUX(565, FUNC2)>,
				 <S32CC_PINMUX(566, FUNC2)>;
		};

	};

	i2c0_gpio_pins: i2c0_gpio_pins {
		i2c0_gpio_grp0 {
			pinmux = <S32CC_PINMUX(16, FUNC0)>,
				 <S32CC_PINMUX(17, FUNC0)>;
			drive-open-drain;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		i2c0_gpio_grp1 {
			pinmux = <S32CC_PINMUX(565, FUNC0)>,
				 <S32CC_PINMUX(566, FUNC0)>;
		};

	};

	i2c1_pins: i2c1_pins {
		i2c1_grp0 {
			pinmux = <S32CC_PINMUX(19, FUNC1)>,
				 <S32CC_PINMUX(20, FUNC1)>;
			drive-open-drain;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_83MHZ>;
		};

		i2c1_grp1 {
			pinmux = <S32CC_PINMUX(717, FUNC2)>,
				 <S32CC_PINMUX(718, FUNC2)>;
		};

	};

	i2c1_gpio_pins: i2c1_gpio_pins {
		i2c1_gpio_grp0 {
			pinmux = <S32CC_PINMUX(19, FUNC0)>,
				 <S32CC_PINMUX(20, FUNC0)>;
			drive-open-drain;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		i2c1_gpio_grp1 {
			pinmux = <S32CC_PINMUX(717, FUNC0)>,
				 <S32CC_PINMUX(718, FUNC0)>;
		};

	};

	i2c2_pins: i2c2_pins {
		i2c2_grp0 {
			pinmux = <S32CC_PINMUX(21, FUNC1)>,
				 <S32CC_PINMUX(22, FUNC1)>;
			drive-open-drain;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_83MHZ>;
		};

		i2c2_grp1 {
			pinmux = <S32CC_PINMUX(719, FUNC2)>,
				 <S32CC_PINMUX(720, FUNC2)>;
		};

	};

	i2c2_gpio_pins: i2c2_gpio_pins {
		i2c2_gpio_grp0 {
			pinmux = <S32CC_PINMUX(21, FUNC0)>,
				 <S32CC_PINMUX(22, FUNC0)>;
			drive-open-drain;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		i2c2_gpio_grp1 {
			pinmux = <S32CC_PINMUX(719, FUNC0)>,
				 <S32CC_PINMUX(720, FUNC0)>;
		};

	};

	i2c4_pins: i2c4_pins {
		i2c4_grp0 {
			pinmux = <S32CC_PINMUX(33, FUNC1)>;
			drive-open-drain;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_83MHZ>;
		};

		i2c4_grp1 {
			pinmux = <S32CC_PINMUX(724, FUNC3)>,
				 <S32CC_PINMUX(723, FUNC3)>;
		};

		i2c4_grp2 {
			pinmux = <S32CC_PINMUX(34, FUNC2)>;
			drive-open-drain;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_83MHZ>;
		};

	};

	i2c4_gpio_pins: i2c4_gpio_pins {
		i2c4_gpio_grp0 {
			pinmux = <S32CC_PINMUX(33, FUNC0)>,
				 <S32CC_PINMUX(34, FUNC0)>;
			drive-open-drain;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		i2c4_gpio_grp1 {
			pinmux = <S32CC_PINMUX(724, FUNC0)>,
				 <S32CC_PINMUX(723, FUNC0)>;
		};

	};

	pfe0mdio_pins: pfe0mdio_pins {
		pfe0mdio_grp0 {
			pinmux = <S32CC_PINMUX(82, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		pfe0mdio_grp1 {
			pinmux = <S32CC_PINMUX(79, FUNC1)>;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		pfe0mdio_grp2 {
			pinmux = <S32CC_PINMUX(837, FUNC2)>;
		};

	};
};

&pit0 {
	status = "okay";
};

&pit1 {
	status = "okay";
};

&spi0 {
	pinctrl-names = "default";
	pinctrl-0 = <&dspi0_pins>;
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	spidev1: spidev@1 {
		compatible = "rohm,dh2228fv";
		spi-max-frequency = <4000000>;
		reg = <1>;
	};

	spidev2: spidev@2 {
		compatible = "rohm,dh2228fv";
		spi-max-frequency = <4000000>;
		reg = <2>;
	};
};

&spi1 {
	pinctrl-names = "default";
	pinctrl-0 = <&dspi1_pins>;
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	spidev0: spidev@0 {
		compatible = "rohm,dh2228fv";
		spi-max-frequency = <4000000>;
		reg = <0>;
	};

	spidev3: spidev@3 {
		compatible = "rohm,dh2228fv";
		spi-max-frequency = <4000000>;
		reg = <3>;
	};
};

&stm0 {
	status = "okay";
};

&stm1 {
	status = "okay";
};

&stm2 {
	status = "okay";
};

&swt3 {
	status = "okay";
};

&swt4 {
	status = "okay";
};

&swt5 {
	status = "okay";
};

&swt6 {
	status = "okay";
};

&usdhc0 {
	status = "okay";
};
