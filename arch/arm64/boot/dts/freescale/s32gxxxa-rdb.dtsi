// SPDX-License-Identifier: GPL-2.0-or-later
/*
 * Device Tree file for S32G274ARDB Board.
 *
 * Copyright 2019-2022 NXP
 *
 */

#include <dt-bindings/gpio/gpio.h>
#include "s32g-nxp-flash-macronix.dtsi"
/ {
	chosen {
		stdout-path = "serial0:115200n8";
	};

	usbphynop: usbphynop {
		compatible = "usb-nop-xceiv";
		#phy-cells = <0>;
	};
};

&gmac0 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&gmac0rgmiia_pins>, <&gmac0mdioa_pins>;
	phy-handle = <&gmac_mdio_a_phy1>;
	phy-mode = "rgmii-id";
};

&gmac0_mdio {
	/* KSZ9031 GMAC */
	gmac_mdio_a_phy1: ethernet-phy@1 {
		reg = <1>;
	};
};

&pfe {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&pfe2mdiob_pins>,
		    <&pfe2rgmiib_pins>;
};

&pfe_mdio0 {
	/* unused */
	status = "disabled";
};

&pfe_mdio1 {
	/* occupied by GMAC0 */
	status = "disabled";
};

&pfe_mdio2 {
	/* AR8035 */
	pfe_mdio_b_phy4: ethernet-phy@4 {
		reg = <4>;
	};
	/* SJA1110's phys: 0x09-0x0e */
};

&pfe_netif0 {
	phy-mode = "sgmii";
	fixed-link {
		speed = <2500>;
		full-duplex;
	};
};

&pfe_netif1 {
	phy-mode = "sgmii";
};

&pfe_netif2 {
	phy-mode = "rgmii-id";
	phy-handle = <&pfe_mdio_b_phy4>;
};

&generic_timer {
	clock-frequency = <5000000>;
};

&i2c0 {
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&i2c0_pins>;
	pinctrl-1 = <&i2c0_gpio_pins>;
	scl-gpios = <&gpio 32 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	sda-gpios = <&gpio 31 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	status = "okay";

	pcal6524: gpio-expander@22 {
		compatible = "nxp,pcal6524";
		reg = <0x22>;
		gpio-controller;
		#gpio-cells = <2>;
	};

	rtc@51 {
		compatible = "nxp,pca85073a";
		reg = <0x51>;
		nxp,no-battery;
	};
};

&i2c1 {
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&i2c1_pins>;
	pinctrl-1 = <&i2c1_gpio_pins>;
	scl-gpios = <&gpio 163 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	sda-gpios = <&gpio 165 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	status = "disabled";
};

&i2c2 {
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&i2c2_pins>;
	pinctrl-1 = <&i2c2_gpio_pins>;
	scl-gpios = <&gpio 21 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	sda-gpios = <&gpio 22 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	status = "okay";
};

&i2c4 {
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&i2c4_pins>;
	pinctrl-1 = <&i2c4_gpio_pins>;
	scl-gpios = <&gpio 34 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	sda-gpios = <&gpio 33 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	status = "okay";
};

&gpio {
	sja1110-rst-phy-t1-hog {
		gpio-hog;
		gpios = <24 GPIO_ACTIVE_LOW>;
		output-low;
		line-name = "sja1110-rst-phy-t1";
	};

	sja1110-rst-core-hog {
		gpio-hog;
		gpios = <81 GPIO_ACTIVE_LOW>;
		output-low;
		line-name = "sja1110-rst-core";
	};
};

&usdhc0 {
	status = "okay";
	no-1-8-v;
};

&can0 {
	pinctrl-names = "default";
	pinctrl-0 = <&can0_pins>;
	status = "okay";
};

&can1 {
	pinctrl-names = "default";
	pinctrl-0 = <&can1_pins>;
	status = "okay";
};

&fccu {
	status = "okay";
};

&swt3 {
	status = "okay";
};

&swt4 {
	status = "okay";
};

&swt5 {
	status = "okay";
};

&swt6 {
	status = "okay";
};

&pit0 {
	status = "okay";
};

&pit1 {
	status = "okay";
};

&pinctrl {
	status = "okay";
	ftm1_pins: ftm1_pins {
		ftm1_grp0 {
			pinmux = <S32CC_PINMUX(670, FUNC2)>;
		};

		ftm1_grp1 {
			pinmux = <S32CC_PINMUX(80, FUNC3)>;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

	};

	can0_pins: can0_pins {
		can0_grp0 {
			pinmux = <S32CC_PINMUX(17, FUNC2)>;
			output-enable;
			slew-rate = <S32CC_SLEW_150MHZ>;
		};

		can0_grp1 {
			pinmux = <S32CC_PINMUX(18, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		can0_grp2 {
			pinmux = <S32CC_PINMUX(513, FUNC3)>;
		};

	};

	can1_pins: can1_pins {
		can1_grp0 {
			pinmux = <S32CC_PINMUX(19, FUNC2)>;
			output-enable;
			slew-rate = <S32CC_SLEW_150MHZ>;
		};

		can1_grp1 {
			pinmux = <S32CC_PINMUX(20, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		can1_grp2 {
			pinmux = <S32CC_PINMUX(631, FUNC2)>;
		};

	};

	can2_pins: can2_pins {
		can2_grp0 {
			pinmux = <S32CC_PINMUX(27, FUNC2)>;
			output-enable;
			slew-rate = <S32CC_SLEW_150MHZ>;
		};

		can2_grp1 {
			pinmux = <S32CC_PINMUX(28, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		can2_grp2 {
			pinmux = <S32CC_PINMUX(632, FUNC2)>;
		};

	};

	can3_pins: can3_pins {
		can3_grp0 {
			pinmux = <S32CC_PINMUX(25, FUNC2)>;
			output-enable;
			slew-rate = <S32CC_SLEW_150MHZ>;
		};

		can3_grp1 {
			pinmux = <S32CC_PINMUX(26, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		can3_grp2 {
			pinmux = <S32CC_PINMUX(633, FUNC2)>;
		};

	};

	dspi1_pins: dspi1_pins {
		dspi1_grp0 {
			pinmux = <S32CC_PINMUX(6, FUNC2)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		dspi1_grp1 {
			pinmux = <S32CC_PINMUX(7, FUNC2)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
			bias-pull-up;
		};

		dspi1_grp2 {
			pinmux = <S32CC_PINMUX(8, FUNC3)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		dspi1_grp3 {
			pinmux = <S32CC_PINMUX(95, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
			bias-pull-up;
		};

		dspi1_grp4 {
			pinmux = <S32CC_PINMUX(987, FUNC2)>;
		};

	};

	dspi1_slave_pins: dspi1_slave_pins {
		dspi1slave_grp0 {
			pinmux = <S32CC_PINMUX(6, FUNC2)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		dspi1slave_grp1 {
			pinmux = <S32CC_PINMUX(7, FUNC2)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		dspi1slave_grp2 {
			pinmux = <S32CC_PINMUX(985, FUNC2)>,
				 <S32CC_PINMUX(986, FUNC2)>,
				 <S32CC_PINMUX(987, FUNC2)>;
		};

		dspi1slave_grp3 {
			pinmux = <S32CC_PINMUX(8, FUNC3)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		dspi1slave_grp4 {
			pinmux = <S32CC_PINMUX(95, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
			bias-pull-up;
		};

	};

	dspi5_pins: dspi5_pins {
		dspi5_grp0 {
			pinmux = <S32CC_PINMUX(9, FUNC3)>,
				 <S32CC_PINMUX(11, FUNC3)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		dspi5_grp1 {
			pinmux = <S32CC_PINMUX(10, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
			bias-pull-up;
		};

		dspi5_grp2 {
			pinmux = <S32CC_PINMUX(1007, FUNC2)>;
		};

		dspi5_grp3 {
			pinmux = <S32CC_PINMUX(12, FUNC3)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
			bias-pull-up;
		};

	};

	i2c0_pins: i2c0_pins {
		i2c0_grp0 {
			pinmux = <S32CC_PINMUX(31, FUNC2)>;
			drive-open-drain;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		i2c0_grp1 {
			pinmux = <S32CC_PINMUX(565, FUNC3)>,
				 <S32CC_PINMUX(566, FUNC3)>;
		};

		i2c0_grp2 {
			pinmux = <S32CC_PINMUX(32, FUNC1)>;
			drive-open-drain;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

	};

	i2c0_gpio_pins: i2c0_gpio_pins {
		i2c0_gpio_grp0 {
			pinmux = <S32CC_PINMUX(31, FUNC0)>,
				 <S32CC_PINMUX(32, FUNC0)>;
			drive-open-drain;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		i2c0_gpio_grp1 {
			pinmux = <S32CC_PINMUX(565, FUNC0)>,
				 <S32CC_PINMUX(566, FUNC0)>;
		};

	};

	i2c2_pins: i2c2_pins {
		i2c2_grp0 {
			pinmux = <S32CC_PINMUX(21, FUNC1)>,
				 <S32CC_PINMUX(22, FUNC1)>;
			drive-open-drain;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_83MHZ>;
		};

		i2c2_grp1 {
			pinmux = <S32CC_PINMUX(719, FUNC2)>,
				 <S32CC_PINMUX(720, FUNC2)>;
		};

	};

	i2c2_gpio_pins: i2c2_gpio_pins {
		i2c2_gpio_grp0 {
			pinmux = <S32CC_PINMUX(719, FUNC0)>,
				 <S32CC_PINMUX(720, FUNC0)>;
		};

		i2c2_gpio_grp1 {
			pinmux = <S32CC_PINMUX(21, FUNC0)>,
				 <S32CC_PINMUX(22, FUNC0)>;
			drive-open-drain;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

	};

	i2c4_pins: i2c4_pins {
		i2c4_grp0 {
			pinmux = <S32CC_PINMUX(33, FUNC1)>;
			drive-open-drain;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_83MHZ>;
		};

		i2c4_grp1 {
			pinmux = <S32CC_PINMUX(724, FUNC3)>,
				 <S32CC_PINMUX(723, FUNC3)>;
		};

		i2c4_grp2 {
			pinmux = <S32CC_PINMUX(34, FUNC2)>;
			drive-open-drain;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_83MHZ>;
		};

	};

	i2c4_gpio_pins: i2c4_gpio_pins {
		i2c4_gpio_grp0 {
			pinmux = <S32CC_PINMUX(33, FUNC0)>,
				 <S32CC_PINMUX(34, FUNC0)>;
			drive-open-drain;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		i2c4_gpio_grp1 {
			pinmux = <S32CC_PINMUX(724, FUNC0)>,
				 <S32CC_PINMUX(723, FUNC0)>;
		};

	};

	usbotg_pins: usbotg_pins {
		usbotg_grp0 {
			pinmux = <S32CC_PINMUX(896, FUNC2)>,
				 <S32CC_PINMUX(897, FUNC2)>,
				 <S32CC_PINMUX(898, FUNC2)>,
				 <S32CC_PINMUX(899, FUNC2)>,
				 <S32CC_PINMUX(900, FUNC2)>,
				 <S32CC_PINMUX(901, FUNC2)>,
				 <S32CC_PINMUX(902, FUNC2)>,
				 <S32CC_PINMUX(903, FUNC2)>,
				 <S32CC_PINMUX(895, FUNC2)>,
				 <S32CC_PINMUX(904, FUNC2)>,
				 <S32CC_PINMUX(905, FUNC2)>;
		};

		usbotg_grp1 {
			pinmux = <S32CC_PINMUX(62, FUNC1)>,
				 <S32CC_PINMUX(63, FUNC1)>,
				 <S32CC_PINMUX(64, FUNC1)>,
				 <S32CC_PINMUX(65, FUNC1)>,
				 <S32CC_PINMUX(188, FUNC1)>,
				 <S32CC_PINMUX(189, FUNC1)>,
				 <S32CC_PINMUX(190, FUNC1)>,
				 <S32CC_PINMUX(112, FUNC1)>;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		usbotg_grp2 {
			pinmux = <S32CC_PINMUX(184, FUNC0)>,
				 <S32CC_PINMUX(185, FUNC0)>,
				 <S32CC_PINMUX(187, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		usbotg_grp3 {
			pinmux = <S32CC_PINMUX(186, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

	};

	gmac0mdioa_pins: gmac0mdioa_pins {
		gmac0mdioa_grp0 {
			pinmux = <S32CC_PINMUX(60, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		gmac0mdioa_grp1 {
			pinmux = <S32CC_PINMUX(61, FUNC1)>;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		gmac0mdioa_grp2 {
			pinmux = <S32CC_PINMUX(527, FUNC2)>;
		};

	};

	gmac0rgmiia_pins: gmac0rgmiia_pins {
		gmac0rgmiia_grp0 {
			pinmux = <S32CC_PINMUX(66, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
			bias-pull-up;
		};

		gmac0rgmiia_grp1 {
			pinmux = <S32CC_PINMUX(538, FUNC2)>,
				 <S32CC_PINMUX(529, FUNC2)>,
				 <S32CC_PINMUX(530, FUNC2)>,
				 <S32CC_PINMUX(531, FUNC2)>,
				 <S32CC_PINMUX(532, FUNC2)>,
				 <S32CC_PINMUX(533, FUNC2)>,
				 <S32CC_PINMUX(534, FUNC2)>;
		};

		gmac0rgmiia_grp2 {
			pinmux = <S32CC_PINMUX(67, FUNC1)>,
				 <S32CC_PINMUX(68, FUNC1)>,
				 <S32CC_PINMUX(69, FUNC1)>,
				 <S32CC_PINMUX(70, FUNC1)>,
				 <S32CC_PINMUX(71, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		gmac0rgmiia_grp3 {
			pinmux = <S32CC_PINMUX(72, FUNC0)>,
				 <S32CC_PINMUX(73, FUNC0)>,
				 <S32CC_PINMUX(74, FUNC0)>,
				 <S32CC_PINMUX(75, FUNC0)>,
				 <S32CC_PINMUX(76, FUNC0)>,
				 <S32CC_PINMUX(77, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

	};

	pfe2mdiob_pins: pfe2mdiob_pins {
		pfe2mdiob_grp0 {
			pinmux = <S32CC_PINMUX(82, FUNC2)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		pfe2mdiob_grp1 {
			pinmux = <S32CC_PINMUX(79, FUNC2)>;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		pfe2mdiob_grp2 {
			pinmux = <S32CC_PINMUX(877, FUNC3)>;
		};

	};

	pfe2rgmiib_pins: pfe2rgmiib_pins {
		pfe2rgmiib_grp0 {
			pinmux = <S32CC_PINMUX(78, FUNC2)>,
				 <S32CC_PINMUX(144, FUNC2)>,
				 <S32CC_PINMUX(113, FUNC2)>,
				 <S32CC_PINMUX(114, FUNC2)>,
				 <S32CC_PINMUX(115, FUNC2)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		pfe2rgmiib_grp1 {
			pinmux = <S32CC_PINMUX(116, FUNC0)>,
				 <S32CC_PINMUX(117, FUNC0)>,
				 <S32CC_PINMUX(118, FUNC0)>,
				 <S32CC_PINMUX(119, FUNC0)>,
				 <S32CC_PINMUX(120, FUNC0)>,
				 <S32CC_PINMUX(121, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		pfe2rgmiib_grp2 {
			pinmux = <S32CC_PINMUX(879, FUNC3)>,
				 <S32CC_PINMUX(885, FUNC3)>,
				 <S32CC_PINMUX(881, FUNC3)>,
				 <S32CC_PINMUX(882, FUNC3)>,
				 <S32CC_PINMUX(883, FUNC3)>,
				 <S32CC_PINMUX(884, FUNC3)>,
				 <S32CC_PINMUX(886, FUNC3)>;
		};

		pfe2rgmiib_grp3 {
			pinmux = <S32CC_PINMUX(122, FUNC2)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
			bias-pull-up;
		};

	};

	ftm0_pins: ftm0_pins {
		ftm0_grp0 {
			pinmux = <S32CC_PINMUX(167, FUNC3)>;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		ftm0_grp1 {
			pinmux = <S32CC_PINMUX(655, FUNC5)>;
		};

	};

	i2c1_pins: i2c1_pins {
		i2c1_grp0 {
			pinmux = <S32CC_PINMUX(163, FUNC3)>,
				 <S32CC_PINMUX(165, FUNC3)>;
			drive-open-drain;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_83MHZ>;
		};

		i2c1_grp1 {
			pinmux = <S32CC_PINMUX(717, FUNC5)>;
		};

		i2c1_grp2 {
			pinmux = <S32CC_PINMUX(718, FUNC4)>;
		};

	};

	i2c1_gpio_pins: i2c1_gpio_pins {
		i2c1_gpio_grp0 {
			pinmux = <S32CC_PINMUX(163, FUNC0)>,
				 <S32CC_PINMUX(165, FUNC0)>;
			drive-open-drain;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		i2c1_gpio_grp1 {
			pinmux = <S32CC_PINMUX(717, FUNC0)>,
				 <S32CC_PINMUX(718, FUNC0)>;
		};

	};
};

&edma0 {
	status = "okay";
};

&edma1 {
	status = "okay";
};

&spi1 {
	pinctrl-0 = <&dspi1_pins>;
	pinctrl-1 = <&dspi1_slave_pins>;
	pinctrl-names = "default", "slave";
	status = "okay";
};

&spi5 {
	pinctrl-names = "default";
	pinctrl-0 = <&dspi5_pins>;
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	/* 1 hardware cs and 1 gpio cs*/
	spi-num-chipselects = <1>;
	cs-gpios = <0>, <&gpio 30 0>;

	sja1110-uc@0 {
		compatible = "nxp,sja1110-uc";
		spi-max-frequency = <5000000>;
		fsl,spi-cs-sck-delay = <50>;
		fsl,spi-sck-cs-delay = <50>;
		reg = <0>;
	};

	sja1110-sw@1 {
		compatible = "nxp,sja1110-switch";
		spi-max-frequency = <5000000>;
		fsl,spi-cs-sck-delay = <50>;
		fsl,spi-sck-cs-delay = <50>;
		reg = <1>;
	};
};

&usbmisc {
	status = "okay";
};

&usbotg {
	pinctrl-names = "default";
	pinctrl-0 = <&usbotg_pins>;
	fsl,usbphy = <&usbphynop>;
	status = "okay";
};

&qspi {
	status = "okay";
};

&pcie0 {
	status = "okay";
};

&pcie1 {
	status = "okay";
};

&pwm0 {
	pinctrl-names = "default";
	pinctrl-0 = <&ftm0_pins>;
	status = "okay";
};

&pwm1 {
	pinctrl-names = "default";
	pinctrl-0 = <&ftm1_pins>;
	status = "okay";
};

&gpio {
	status = "okay";
};

&llce_dte_sram {
	status = "okay";
};

&llce_ppe_rx_sram {
	status = "okay";
};

&llce_ppe_tx_sram {
	status = "okay";
};

&llce_frpe_sram {
	status = "okay";
};

&llce_shmem {
	status = "okay";
};

&llce_boot_status {
	status = "okay";
};

&llce_can0 {
	status = "okay";
};

&llce_can1 {
	status = "okay";
};

&llce_can2 {
	status = "okay";
};

&llce_can3 {
	status = "okay";
};

&llce_can4 {
	status = "okay";
};

&llce_can5 {
	status = "okay";
};

&llce_can6 {
	status = "okay";
};

&llce_can7 {
	status = "okay";
};

&llce_can8 {
	status = "okay";
};

&llce_can9 {
	status = "okay";
};

&llce_can10 {
	status = "okay";
};

&llce_can11 {
	status = "okay";
};

&llce_can13 {
	status = "okay";
};

&llce_can14 {
	status = "okay";
};

&llce_can15 {
	status = "okay";
};
