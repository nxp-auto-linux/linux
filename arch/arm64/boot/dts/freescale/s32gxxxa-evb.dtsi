// SPDX-License-Identifier: GPL-2.0-or-later
/*
 * Copyright 2019-2022 NXP
 */
#include <dt-bindings/gpio/gpio.h>
#include "s32g-nxp-flash-macronix.dtsi"

/ {
	chosen {
		stdout-path = "serial0:115200n8";
	};
};

&generic_timer {
	clock-frequency = <5000000>;
};

&i2c0 {
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&i2c0_pins>;
	pinctrl-1 = <&i2c0_gpio_pins>;
	scl-gpios = <&gpio 17 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	sda-gpios = <&gpio 16 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	status = "okay";
};

&i2c1 {
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&i2c1_pins>;
	pinctrl-1 = <&i2c1_gpio_pins>;
	scl-gpios = <&gpio 19 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	sda-gpios = <&gpio 20 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	status = "okay";
};

&i2c2 {
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&i2c2_pins>;
	pinctrl-1 = <&i2c2_gpio_pins>;
	scl-gpios = <&gpio 21 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	sda-gpios = <&gpio 22 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	status = "okay";
};

&i2c4 {
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&i2c4_pins>;
	pinctrl-1 = <&i2c4_gpio_pins>;
	scl-gpios = <&gpio 34 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	sda-gpios = <&gpio 33 (GPIO_ACTIVE_HIGH | GPIO_OPEN_DRAIN)>;
	status = "okay";
};

&usdhc0 {
	no-1-8-v;
	status = "okay";
};

&can0 {
	pinctrl-names = "default";
	pinctrl-0 = <&can0_pins>;
	status = "okay";
};

&can2 {
	pinctrl-names = "default";
	pinctrl-0 = <&can2_pins>;
	status = "okay";
};

&can3 {
	pinctrl-names = "default";
	pinctrl-0 = <&can3_pins>;
	status = "okay";
};

&fccu {
	status = "okay";
};

&swt3 {
	status = "okay";
};

&swt4 {
	status = "okay";
};

&swt5 {
	status = "okay";
};

&swt6 {
	status = "okay";
};

&pit0 {
	status = "okay";
};

&pit1 {
	status = "okay";
};

&pinctrl {
	status = "okay";

	can0_pins: can0_pins {
		can0_grp0 {
			pinmux = <S32CC_PINMUX(44, FUNC1)>;
			output-enable;
			slew-rate = <S32CC_SLEW_150MHZ>;
		};

		can0_grp1 {
			pinmux = <S32CC_PINMUX(43, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		can0_grp2 {
			pinmux = <S32CC_PINMUX(513, FUNC2)>;
		};
	};

	can2_pins: can2_pins {
		can2_grp0 {
			pinmux = <S32CC_PINMUX(27, FUNC2)>;
			output-enable;
			slew-rate = <S32CC_SLEW_150MHZ>;
		};

		can2_grp1 {
			pinmux = <S32CC_PINMUX(28, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		can2_grp2 {
			pinmux = <S32CC_PINMUX(632, FUNC2)>;
		};
	};

	can3_pins: can3_pins {
		can3_grp0 {
			pinmux = <S32CC_PINMUX(25, FUNC2)>;
			output-enable;
			slew-rate = <S32CC_SLEW_150MHZ>;
		};

		can3_grp1 {
			pinmux = <S32CC_PINMUX(26, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		can3_grp2 {
			pinmux = <S32CC_PINMUX(633, FUNC2)>;
		};
	};

	dspi1_pins: dspi1_pins {
		dspi1_grp0 {
			pinmux = <S32CC_PINMUX(7, FUNC2)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
			bias-pull-up;
		};

		dspi1_grp1 {
			pinmux = <S32CC_PINMUX(6, FUNC2)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		dspi1_grp2 {
			pinmux = <S32CC_PINMUX(8, FUNC3)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		dspi1_grp3 {
			pinmux = <S32CC_PINMUX(95, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
			bias-pull-up;
		};

		dspi1_grp4 {
			pinmux = <S32CC_PINMUX(987, FUNC2)>;
		};
	};

	dspi1slave_pins: dspi1slave_pins {
		dspi1slave_grp0 {
			pinmux = <S32CC_PINMUX(6, FUNC2)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		dspi1slave_grp1 {
			pinmux = <S32CC_PINMUX(7, FUNC2)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		dspi1slave_grp2 {
			pinmux = <S32CC_PINMUX(985, FUNC2)>,
				 <S32CC_PINMUX(986, FUNC2)>,
				 <S32CC_PINMUX(987, FUNC2)>;
		};

		dspi1slave_grp3 {
			pinmux = <S32CC_PINMUX(8, FUNC3)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		dspi1slave_grp4 {
			pinmux = <S32CC_PINMUX(95, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
			bias-pull-up;
		};
	};

	dspi5_pins: dspi5_pins {
		dspi5_grp0 {
			pinmux = <S32CC_PINMUX(9, FUNC3)>,
				 <S32CC_PINMUX(11, FUNC3)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		dspi5_grp1 {
			pinmux = <S32CC_PINMUX(10, FUNC0)>;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
			bias-pull-up;
		};

		dspi5_grp2 {
			pinmux = <S32CC_PINMUX(1007, FUNC2)>;
		};

		dspi5_grp3 {
			pinmux = <S32CC_PINMUX(12, FUNC3)>;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
			bias-pull-up;
		};
	};

	i2c0_pins: i2c0_pins {
		i2c0_grp0 {
			pinmux = <S32CC_PINMUX(16, FUNC1)>,
				 <S32CC_PINMUX(17, FUNC1)>;
			drive-open-drain;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_83MHZ>;
		};

		i2c0_grp1 {
			pinmux = <S32CC_PINMUX(565, FUNC2)>,
				 <S32CC_PINMUX(566, FUNC2)>;
		};
	};

	i2c0_gpio_pins: i2c0_gpio_pins {
		i2c0_gpio_grp0 {
			pinmux = <S32CC_PINMUX(16, FUNC0)>,
				 <S32CC_PINMUX(17, FUNC0)>;
			drive-open-drain;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		i2c0_gpio_grp1 {
			pinmux = <S32CC_PINMUX(565, FUNC0)>,
				 <S32CC_PINMUX(566, FUNC0)>;
		};
	};

	i2c1_pins: i2c1_pins {
		i2c1_grp0 {
			pinmux = <S32CC_PINMUX(19, FUNC1)>,
				 <S32CC_PINMUX(20, FUNC1)>;
			drive-open-drain;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_83MHZ>;
		};

		i2c1_grp1 {
			pinmux = <S32CC_PINMUX(717, FUNC2)>,
				 <S32CC_PINMUX(718, FUNC2)>;
		};

	};

	i2c1_gpio_pins: i2c1_gpio_pins {
		i2c1_gpio_grp0 {
			pinmux = <S32CC_PINMUX(19, FUNC0)>,
				 <S32CC_PINMUX(20, FUNC0)>;
			drive-open-drain;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		i2c1_gpio_grp1 {
			pinmux = <S32CC_PINMUX(717, FUNC0)>,
				 <S32CC_PINMUX(718, FUNC0)>;
		};
	};

	i2c2_pins: i2c2_pins {
		i2c2_grp0 {
			pinmux = <S32CC_PINMUX(21, FUNC1)>,
				 <S32CC_PINMUX(22, FUNC1)>;
			drive-open-drain;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_83MHZ>;
		};

		i2c2_grp1 {
			pinmux = <S32CC_PINMUX(719, FUNC2)>,
				 <S32CC_PINMUX(720, FUNC2)>;
		};

	};

	i2c2_gpio_pins: i2c2_gpio_pins {
		i2c2_gpio_grp0 {
			pinmux = <S32CC_PINMUX(719, FUNC0)>,
				 <S32CC_PINMUX(720, FUNC0)>;
		};

		i2c2_gpio_grp1 {
			pinmux = <S32CC_PINMUX(21, FUNC0)>,
				 <S32CC_PINMUX(22, FUNC0)>;
			drive-open-drain;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

	};

	i2c4_pins: i2c4_pins {
		i2c4_grp0 {
			pinmux = <S32CC_PINMUX(33, FUNC1)>;
			drive-open-drain;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_83MHZ>;
		};

		i2c4_grp1 {
			pinmux = <S32CC_PINMUX(724, FUNC3)>,
				 <S32CC_PINMUX(723, FUNC3)>;
		};

		i2c4_grp2 {
			pinmux = <S32CC_PINMUX(34, FUNC2)>;
			drive-open-drain;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_83MHZ>;
		};
	};

	i2c4_gpio_pins: i2c4_gpio_pins {
		i2c4_gpio_grp0 {
			pinmux = <S32CC_PINMUX(33, FUNC0)>,
				 <S32CC_PINMUX(34, FUNC0)>;
			drive-open-drain;
			output-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		i2c4_gpio_grp1 {
			pinmux = <S32CC_PINMUX(724, FUNC0)>,
				 <S32CC_PINMUX(723, FUNC0)>;
		};
	};

	ftm0_pins: ftm0_pins {
		ftm0_grp0 {
			pinmux = <S32CC_PINMUX(657, FUNC2)>;
		};

		ftm0_grp1 {
			pinmux = <S32CC_PINMUX(18, FUNC2)>,
				 <S32CC_PINMUX(180, FUNC2)>;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		ftm0_grp2 {
			pinmux = <S32CC_PINMUX(177, FUNC3)>,
				 <S32CC_PINMUX(181, FUNC3)>;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		ftm0_grp3 {
			pinmux = <S32CC_PINMUX(656, FUNC4)>;
		};

		ftm0_grp4 {
			pinmux = <S32CC_PINMUX(658, FUNC5)>;
		};

		ftm0_grp5 {
			pinmux = <S32CC_PINMUX(659, FUNC6)>;
		};
	};

	ftm1_pins: ftm1_pins {
		ftm1_grp0 {
			pinmux = <S32CC_PINMUX(29, FUNC3)>;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		ftm1_grp1 {
			pinmux = <S32CC_PINMUX(667, FUNC4)>;
		};

		ftm1_grp2 {
			pinmux = <S32CC_PINMUX(668, FUNC3)>;
		};

		ftm1_grp3 {
			pinmux = <S32CC_PINMUX(31, FUNC4)>;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		ftm1_grp4 {
			pinmux = <S32CC_PINMUX(32, FUNC2)>;
			output-enable;
			input-enable;
			slew-rate = <S32CC_SLEW_208MHZ>;
		};

		ftm1_grp5 {
			pinmux = <S32CC_PINMUX(669, FUNC2)>;
		};
	};
};

&pcie0 {
	status = "okay";
};

&pcie1 {
	status = "okay";
};

&qspi {
	status = "okay";
};

&edma0 {
	status = "okay";
};

&edma1 {
	status = "okay";
};

&spi1 {
	pinctrl-0 = <&dspi1_pins>;
	pinctrl-1 = <&dspi1slave_pins>;
	pinctrl-names = "default", "slave";
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	spidev0: spidev@0 {
		compatible = "rohm,dh2228fv";
		spi-max-frequency = <4000000>;
		reg = <0>;
		fsl,spi-cs-sck-delay = <100>;
		fsl,spi-sck-cs-delay = <100>;
	};
};

&pwm0 {
	pinctrl-names = "default";
	pinctrl-0 = <&ftm0_pins>;
	status = "okay";
};

&pwm1 {
	pinctrl-names = "default";
	pinctrl-0 = <&ftm1_pins>;
	status = "okay";
};
