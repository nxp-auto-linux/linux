// SPDX-License-Identifier: GPL-2.0
/*
 * Copyright 2019-2020 NXP
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 */

#include "fsl-s32-gen1.dtsi"
#include <dt-bindings/pinctrl/s32g274-pinctrl.h>

/ {
	chosen {
		linux,initrd-start = <0x84000000>;
		linux,initrd-end = <0x8A000000>;
	};

	sysclk: clk10000000 {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <10000000>;
		clock-output-names = "sysclk";
	};

	virtio_block@39501000 {
		compatible = "virtio,mmio";
		reg = <0x0 0x39501000 0x0 0x1000>;
		interrupts = <0 68 4>;
	};

	clks: clks@40038000 {
		compatible = "fsl,s32g274-clocking";
		reg = <0x0 0x40038000 0x0 0x3000>, /*armpll*/
		      <0x0 0x4003C000 0x0 0x3000>, /*periphpll*/
		      <0x0 0x40040000 0x0 0x3000>, /*accelpll*/
		      <0x0 0x40044000 0x0 0x3000>, /*ddrpll*/
		      <0x0 0x40054000 0x0 0x3000>, /*armdfs*/
		      <0x0 0x40058000 0x0 0x3000>; /*periphdfs*/
		#clock-cells = <1>;
	};

	mc_cgm2: mc_cgm2@44018000 {
		compatible = "fsl,s32gen1-mc_cgm2";
		reg = <0x0 0x44018000 0x0 0x3000>;
	};

	siul2_0 {
		compatible = "simple-mfd";
		#address-cells = <2>;
		#size-cells = <2>;
		status = "okay";
			  /* PINCTRL */
		ranges = <1 0 0x0 0x4009C240 0x0 0x198>,
			 /* IMCR range */
			 <2 0 0x0 0x4009CA40 0x0 0x150>;
		pinctrl0: siul2-pinctrl0@4009C000 {
			compatible = "fsl,s32g274-siul2_0-pinctrl";
			#pinctrl-cells = <2>;
			reg = <0x1 0x0 0x0 0x198>,
			<0x2 0x0 0x0 0x150>;
			/* MSCR range */
			pins = <&pinctrl0 0 101>,
			/* IMCR range */
			<&pinctrl0 512 595>;
			status = "okay";
		};
		/*
		 * Note gpio controller nodes are split into sections
		 * of contiguous GPIO numbering at this
		 * point in time, functions working with gpio chips
		 * assume this for many things.
		 */
		gpioother0: siul2-gpio0@4009C002 {
			compatible = "fsl,s32gen1-siul2-gpio";
			gpio-controller;
			#gpio-cells = <2>;
			gpio-ranges = <&pinctrl0 0 0 19>;
				/* Pad Data I/0 Registers */
			regmap0 = <&opad0_regs>;
			regmap1 = <&ipad0_regs>;
			status = "okay";
		};
		gpioeirq0: siul2-gpio0@4009C004 {
			compatible = "fsl,s32gen1-siul2-gpio";
			gpio-controller;
			#gpio-cells = <2>;
				/* GPIO 0-15,27-32 */
			gpio-ranges = <&pinctrl0 0 19 11>,
				/* EIRQ pins */
				<&pinctrl1 910 910 11>;
				/* Pad Data I/0 Registers */
			regmap0 = <&opad0_regs>;
			regmap1 = <&ipad0_regs>;
			regmap2 = <&irq_regs>;
			interrupt-controller;
			interrupts = <0 0 4>;
			pinctrl-names = "default";
			pinctrl-0 = <&pinctrl_gpioeirq0>;
			status = "okay";
		};
		gpioother1: siul2-gpio0@4009C006 {
			compatible = "fsl,s32gen1-siul2-gpio";
			gpio-controller;
			#gpio-cells = <2>;
			gpio-ranges = <&pinctrl0 0 30 1>;
				/* Pad Data I/0 Registers */
			regmap0 = <&opad0_regs>;
			regmap1 = <&ipad0_regs>;
			status = "okay";
		};
		gpioeirq1: siul2-gpio0@4009C008 {
			compatible = "fsl,s32gen1-siul2-gpio";
			gpio-controller;
			#gpio-cells = <2>;
				/* GPIO 0-15,27-32 */
			gpio-ranges = <&pinctrl0 0 31 1>,
				/* EIRQ pins */
				<&pinctrl1 922 922 1>;
				/* Pad Data I/0 Registers */
			regmap0 = <&opad0_regs>;
			regmap1 = <&ipad0_regs>;
			regmap2 = <&irq_regs>;
			interrupt-controller;
			interrupts = <0 12 4>;
			pinctrl-names = "default";
			status = "okay";
		};
		gpioother2: siul2-gpio0@4009C00A {
			compatible = "fsl,s32gen1-siul2-gpio";
			gpio-controller;
			#gpio-cells = <2>;
			gpio-ranges = <&pinctrl0 0 32 1>;
				/* Pad Data I/0 Registers */
			regmap0 = <&opad0_regs>;
			regmap1 = <&ipad0_regs>;
			status = "okay";
		};
		gpioeirq2: siul2-gpio0@4009C00C {
			compatible = "fsl,s32gen1-siul2-gpio";
			gpio-controller;
			#gpio-cells = <2>;
				/* GPIO 0-15,27-32 */
			gpio-ranges = <&pinctrl0 0 33 3>,
				/* EIRQ pins */
				<&pinctrl1 923 923 3>;
				/* Pad Data I/0 Registers */
			regmap0 = <&opad0_regs>;
			regmap1 = <&ipad0_regs>;
			regmap2 = <&irq_regs>;
			interrupt-controller;
			interrupts = <0 13 4>;
			pinctrl-names = "default";
			status = "okay";
		};
		gpioeirq3: siul2-gpio0@4009C00E {
			compatible = "fsl,s32gen1-siul2-gpio";
			gpio-controller;
			#gpio-cells = <2>;
				/* GPIO 0-15,27-32 */
			gpio-ranges = <&pinctrl0 0 36 5>,
				/* EIRQ pins */
				<&pinctrl1 937 937 5>;
				/* Pad Data I/0 Registers */
			regmap0 = <&opad0_regs>;
			regmap1 = <&ipad0_regs>;
			regmap2 = <&irq_regs>;
			interrupt-controller;
			interrupts = <0 27 4>;
			pinctrl-names = "default";
			status = "okay";
		};
		gpioother3: siul2-gpio0@4009C010 {
			compatible = "fsl,s32gen1-siul2-gpio";
			gpio-controller;
			#gpio-cells = <2>;
			gpio-ranges = <&pinctrl0 0 41 61>;
				/* Pad Data I/0 Registers */
			regmap0 = <&opad0_regs>;
			regmap1 = <&ipad0_regs>;
			status = "okay";
		};
	};

	siul2_1 {
		compatible = "simple-mfd";
		#address-cells = <2>;
		#size-cells = <2>;
		status = "okay";

			  /* PINCTRL */
		ranges = <1 0 0x0 0x44010400 0x0 0x13C>,
			 /* IMCR range */
			 <2 0 0x0 0x44010C1C 0x0 0x5E4>;

		pinctrl1: siul2-pinctrl1@44010000 {
			compatible = "fsl,s32g274-siul2_1-pinctrl";
			#pinctrl-cells = <2>;
			reg = <0x1 0x0 0x0 0x13C>,
			<0x2 0x0 0x0 0x5E4>;
			/* MSCR range */
			pins = <&pinctrl1 112 190>,
			/* IMCR range */
			<&pinctrl1 631 1007>;
			status = "okay";
		};
		/*
		 * Note gpio controller nodes are split into sections
		 * of contiguous GPIO numbering at this
		 * point in time, functions working with gpio chips
		 * assume this for many things.
		 */
		gpioother4: siul2-gpio0@44010002 {
			compatible = "fsl,s32gen1-siul2-gpio";
			gpio-controller;
			#gpio-cells = <2>;
			gpio-ranges = <&pinctrl1 0 112 1>;
				/* Pad Data I/0 Registers */
			regmap0 = <&opad1_regs>;
			regmap1 = <&ipad1_regs>;
			status = "okay";
		};
		gpioeirq4: siul2-gpio0@44010004 {
			compatible = "fsl,s32gen1-siul2-gpio";
			gpio-controller;
			#gpio-cells = <2>;
				/* GPIO 0-15,27-32 */
			gpio-ranges = <&pinctrl1 0 113 3>,
				/* EIRQ pins */
				<&pinctrl1 933 933 3>;
				/* Pad Data I/0 Registers */
			regmap0 = <&opad1_regs>;
			regmap1 = <&ipad1_regs>;
			regmap2 = <&irq_regs>;
			interrupt-controller;
			interrupts = <0 23 4>;
			status = "okay";
		};
		gpioother5: siul2-gpio0@44010006 {
			compatible = "fsl,s32gen1-siul2-gpio";
			gpio-controller;
			#gpio-cells = <2>;
			gpio-ranges = <&pinctrl1 0 116 1>;
				/* Pad Data I/0 Registers */
			regmap0 = <&opad1_regs>;
			regmap1 = <&ipad1_regs>;
			status = "okay";
		};
		gpioeirq5: siul2-gpio0@44010008 {
			compatible = "fsl,s32gen1-siul2-gpio";
			gpio-controller;
			#gpio-cells = <2>;
				/* GPIO 0-15,27-32 */
			gpio-ranges = <&pinctrl1 0 117 1>,
				/* EIRQ pins */
				<&pinctrl1 936 936 1>;
				/* Pad Data I/0 Registers */
			regmap0 = <&opad1_regs>;
			regmap1 = <&ipad1_regs>;
			regmap2 = <&irq_regs>;
			interrupt-controller;
			interrupts = <0 26 4>;
			status = "okay";
		};
		gpioother6: siul2-gpio0@4401000A {
			compatible = "fsl,s32gen1-siul2-gpio";
			gpio-controller;
			#gpio-cells = <2>;
			gpio-ranges = <&pinctrl1 0 118 5>;
				/* Pad Data I/0 Registers */
			regmap0 = <&opad1_regs>;
			regmap1 = <&ipad1_regs>;
			status = "okay";
		};
		gpioother7: siul2-gpio0@4401000C {
			compatible = "fsl,s32gen1-siul2-gpio";
			gpio-controller;
			#gpio-cells = <2>;
			gpio-ranges = <&pinctrl1 0 144 24>;
				/* Pad Data I/0 Registers */
			regmap0 = <&opad1_regs>;
			regmap1 = <&ipad1_regs>;
			status = "okay";
		};
		gpioeirq6: siul2-gpio0@4401000E {
			compatible = "fsl,s32gen1-siul2-gpio";
			gpio-controller;
			#gpio-cells = <2>;
				/* GPIO 0-15,27-32 */
			gpio-ranges = <&pinctrl1 0 168 1>,
				/* EIRQ pins */
				<&pinctrl1 921 921 1>;
				/* Pad Data I/0 Registers */
			regmap0 = <&opad1_regs>;
			regmap1 = <&ipad1_regs>;
			regmap2 = <&irq_regs>;
			interrupt-controller;
			interrupts = <0 11 4>;
			status = "okay";
		};
		gpioother8: siul2-gpio0@44010010 {
			compatible = "fsl,s32gen1-siul2-gpio";
			gpio-controller;
			#gpio-cells = <2>;
			gpio-ranges = <&pinctrl1 0 169 15>;
				/* Pad Data I/0 Registers */
			regmap0 = <&opad1_regs>;
			regmap1 = <&ipad1_regs>;
			status = "okay";
		};
		gpioeirq7: siul2-gpio0@44010012 {
			compatible = "fsl,s32gen1-siul2-gpio";
			gpio-controller;
			#gpio-cells = <2>;
				/* GPIO 0-15,27-32 */
			gpio-ranges = <&pinctrl1 0 184 7>,
				/* EIRQ pins */
				<&pinctrl1 926 926 7>;
				/* Pad Data I/0 Registers */
			regmap0 = <&opad1_regs>;
			regmap1 = <&ipad1_regs>;
			regmap2 = <&irq_regs>;
			interrupt-controller;
			interrupts = <0 16 4>;
			status = "okay";
		};
	};
	irq_regs: siul2_reg@0x44010000 {
		compatible = "fsl,irq_reqs-s32gen1","syscon","simple-mfd";
		reg = <0x0 0x44010000 0x0 0x44>;
		little-endian;
	};
	opad0_regs: siul2_reg@0x4009D700 {
		compatible = "fsl,opad0_reqs-s32gen1","syscon","simple-mfd";
		reg = <0x0 0x4009D700 0x0 0x10>;
		big-endian;
	};
	ipad0_regs: siul2_reg@0x4009D740 {
		compatible = "fsl,ipad0_reqs-s32gen1","syscon","simple-mfd";
		reg = <0x0 0x4009D740 0x0 0x10>;
		big-endian;
	};
	opad1_regs: siul2_reg@0x4401170C {
		compatible = "fsl,opad0_reqs-s32gen1","syscon","simple-mfd";
		reg = <0x0 0x4401170C 0x0 0x14>;
		big-endian;
	};
	ipad1_regs: siul2_reg@0x4401174C {
		compatible = "fsl,ipad0_reqs-s32gen1","syscon","simple-mfd";
		reg = <0x0 0x4401174C 0x0 0x14>;
		big-endian;
	};

	usbmisc: usbmisc@44064200 {
		#index-cells = <1>;
		compatible = "fsl,s32g274a-usbmisc";
		reg = <0x0 0x44064200 0x0 0x200>;
	};

	usbotg: usb@44064000 {
		compatible = "fsl,s32g274a-usb";
		reg = <0x0 0x44064000 0x0 0x200>;
		interrupt-parent = <&gic>;
		interrupts = <0 211 4>, /* OTG Core */
			     <0 212 4>; /* OTG Wakeup */
		clocks = <&clks S32GEN1_CLK_XBAR_DIV4>,
			 <&clks S32GEN1_CLK_SIRC>;
		fsl,usbmisc = <&usbmisc 0>;
		ahb-burst-config = <0x0>;
		tx-burst-size-dword = <0x10>;
		rx-burst-size-dword = <0x10>;
		phy_type = "ulpi";
		dr_mode = "host";
		maximum-speed = "high-speed";
		status = "disabled";
	};
};

