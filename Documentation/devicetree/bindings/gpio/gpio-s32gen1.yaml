# SPDX-License-Identifier: GPL-2.0
%YAML 1.2
---

title: NXP S32Gen1 SIUL2 GPIO controller

maintainers:
  - Ghennadi Procopciuc <Ghennadi.Procopciuc@nxp.com>
  - Larisa Grigore <larisa.grigore@nxp.com>

description: |
  Support for the SIUL2 GPIOs found on the S32-GEN1 chips.
  It includes an IRQ controller for all EIRQ pins.

  To use a gpio in other device tree node, one should specify the gpio offset
  relative to the first gpio handled by the chip.
  Example EIRQ1 corresponds to GPIO152 so the offset will be computed as
  152 - 112 = 40.
    <&gpio1 40 4> => EIRQ1
    <&gpio1 65 4> => EIRQ2

  In s32g274a case, two pins from different SIULs can export same eirq.
  Example EIRQ1 can be accessed through GPIO20(SIUL2_0) and GPIO152(SIUL2_1).
  The dts node should refer the corresponding gpio node.
  Example
    <&gpio0 20 4> -> GPIO20(SIUL2_0)
    <&gpio1 40 4> -> GPIO152(SIUL2_1)

  Also pinmuxing for the used EIRQ is necessary.
  The pad should be added in gpioeirqgrp1.

properties:
  compatible:
    const:
      - fsl,irq_reqs-s32gen1
      - fsl,opad0_reqs-s32gen1
      - fsl,ipad0_reqs-s32gen1

  interrupts:
    description:
      Should be the port interrupt shared by all 32 EIRQs
    maxitems: 1

  gpio-controller:
    description:
      Marks the device node as a gpio controller

  gpio-cells:
    description: |
      Should be two.  The first cell is the pin number and
      the second cell is used to specify the gpio polarity
      0 = active high
      1 = active low

  interrupt-controller:
    description:
      Marks the device node as an interrupt controller

  gpio-ranges:
    description:
      Interaction with the PINCTRL subsystem

  eirq-ranges:
    description:
      GPIO ranges that can be used as EIRQs

required:
  - compatible
  - interrupts
  - gpio-controller
  - gpio-cells
  - interrupt-controller
  - gpio-ranges
  - eirq-ranges

additionalProperties: false

examples:
  - |
    gpio1: siul2-gpio1 {
      compatible = "fsl,s32gen1-siul2-gpio";
      gpio-controller;
      #gpio-cells = <2>;
        /* GPIO 112-190 */
      gpio-ranges = <&pinctrl1 0 112 79>;
        /* GPIO 151-152 */
      eirq-ranges = <&pinctrl1 0 151 2>,
        /* GPIO 177-182 */
        <&pinctrl1 0 177 6>;
        /* Pad Data I/0 Registers */
      regmap0 = <&opad1_regs>;
      regmap1 = <&ipad1_regs>;
      regmap2 = <&irq_regs>;
      interrupt-controller;
      interrupts = <0 210 4>;
      status = "okay";
    };
...
